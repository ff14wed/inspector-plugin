{"version":3,"sources":["api/gql.ts","api/gqlClient.ts","store/entity.ts","store/stream.ts","components/MapBackground.tsx","components/MapEntity.tsx","components/MapTelegraph.tsx","components/MapView.tsx","components/Map.tsx","components/PaddedCard.tsx","components/TwoColumnTable.tsx","components/StreamDetails.tsx","components/EntityListItem.tsx","components/EntityList.tsx","components/ResourceValue.tsx","components/Summary.tsx","components/Tabs.jsx","components/AdditionalInfo.tsx","components/Details.tsx","components/Sidebar.tsx","components/App.tsx","components/LoadingApp.tsx","serviceWorker.js","index.tsx"],"names":["gql","_temp","Object","classCallCheck","this","classJobFragment","_templateObject","resourcesFragment","_templateObject2","locationFragment","_templateObject3","actionFragment","_templateObject4","statusFragment","_templateObject5","castingInfoFragment","_templateObject6","placeFragment","_templateObject7","enmityFragment","_templateObject8","entityFragment","_templateObject9","streamFragment","_templateObject10","streamSubscription","_templateObject11","entitySubscription","_templateObject12","versionQuery","_templateObject13","streamQuery","_templateObject14","listStreamsQuery","_templateObject15","hookMutation","_templateObject16","errHandlerLink","onError","_ref","graphQLErrors","networkError","map","_ref2","message","locations","path","console","log","concat","executeOperation","httpLink","operation","Promise","resolve","reject","makePromise","execute","then","result","data","errors","catch","error","GQLClient","apiURL","apiToken","_this","wsLink","getAPIVersion","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","query","sent","abrupt","apiVersion","stop","listStreams","_callee2","_context2","streams","getStream","_ref5","_callee3","streamID","variables","_context3","stream","_x","apply","arguments","subscribeToStreamEvents","handleStreamEvent","subscribe","subscriptionData","streamEvent","_streamEvent$type","type","__typename","eventData","objectWithoutProperties","subscribeToEntityEvents","handleEntityEvent","entityEvent","entityID","_entityEvent$type","httpOpts","headers","Authorization","wsConnectionParams","authorization","undefined","ApolloLink","from","HttpLink","objectSpread2","uri","WebSocketLink","replace","options","reconnect","connectionParams","toHex","id","toString","slice","Interpolation","p0","p1","startTime","t0","t1","duration","lastUpdated","t","lerpFactor","x","y","z","orientation","Entity","ent","target","index","name","bNPCInfo","ownerID","isNPC","isEnemy","isPet","rawSpawnData","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","statuses","observable","interpBufffer","_descriptor9","targetID","level","lastAction","castingInfo","assign","classJob","resources","location","interpLocation","JSON","parse","rawSpawnJSONData","forEach","s","idx","set","typename","action","status","delete","locationInterpolation","length","push","performance","now","time","interpolation","shift","pt","_this$interpLocation","xi","yi","zi","_this$location","dx","dy","dz","Math","sqrt","hasTarget","realName","hexTargetID","_this$castingInfo","actionName","actionID","info","targetString","fromEntries","toJS","size","computed","streamStoreDefaultProps","streamStore","store_stream","gqlClient","pluginParams","semver","satisfies","includePrerelease","getActiveStreamID","serverID","instanceNum","characterID","place","entities","_iterator","_step","n","done","value","window","requestAnimationFrame","animationFrame","targetEnt","get","castingTargetEnt","loading","_this2","selectedMapIndex","_this3","setEntities","removeEntity","addEntity","entity","currentCharacter","_this4","clear","selectedEntityID","optionName","toggle","hexID","has","ents","sort","b","maps","key","SizeFactor","OffsetX","OffsetY","PlaceName","PlaceNameSub","TerritoryType","mapID","territoryID","Map","followSelection","_this5","MapBackground","mapProps","url","scaleFactor","texture","PIXI","_super","call","anchor","height","width","position","destroy","children","coneCanvas","canvas","document","createElement","ctx","getContext","beginPath","moveTo","arc","PI","lineTo","gradient","createLinearGradient","addColorStop","fillStyle","fill","selectIndicatorCanvas","lineWidth","strokeStyle","stroke","entityCircleCanvas","lineCap","globalAlpha","createCone","cone","createSelectorIndicator","marker","MapEntity","telegraphUpdated","targetObserverDispose","locationObserverDispose","interpLocationObserverDispose","castingObserverDispose","baseEntity","selector","locationUpdated","_this$baseEntity$loca","rotation","interpLocationUpdated","_this$baseEntity$inte","targetUpdated","color","Colors","RED3","VIOLET3","FOREST3","COBALT3","tint","parseInt","substring","select","addChild","unselect","removeChild","radius","interactive","interactiveChildren","cursor","observe","remapCast","xAxisModifier","effectRange","castType","knownFans","12898","12899","12900","12901","12904","12905","13108","Telegraph","castingEntity","renderer","rotationOffset","telegraphTexture","telegraphType","possibleConstructorReturn","_remapCast","omen","additionalRange","graphics","beginFill","lineStyle","drawRect","angle","match","exec","Number","extractAngle","radAngle","closePath","drawCircle","beginHole","endHole","baseRenderTex","scaleMode","LINEAR","render","COBALT5","VERMILION3","crossContainer","subSprite1","subSprite2","subSprite3","getPrototypeOf","prototype","baseTexture","MapView","inject","observer","_canvas","app","viewport","entityContainer","telegraphsContainer","mapContainer","entitySprites","telegraphSprites","mapSprite","entityObserverDispose","mapObserverDispose","selectedEntityObserverDispose","optionsObserverDispose","coordText","fontFamily","fontSize","align","hoverName","resize","parent","view","parentNode","clientWidth","clientHeight","screen","setOverlay","posx","posy","prefix","text","handleEntityChange","change","newValue","sprite","updateTelegraph","props","on","e","currentTarget","setSelectedEntityID","removeTelegraph","dispose","telegraph","MapTelegraph","createCompositeTelegraph","updateMap","mapInfo","worldHeight","worldWidth","clampZoom","maxWidth","maxHeight","centerX","centerY","moveCenter","leftClamp","rightClamp","topClamp","bottomClamp","clamp","left","top","right","bottom","updateEntitySelection","oldSelection","newSelection","oldID","newID","oldSprite","curSprite","plugins","remove","follow","updateOptions","selectedEntity","antialias","Viewport","interaction","drag","pinch","wheel","decelerate","zoomPercent","stage","addEventListener","currentMap","oldValue","pos","getLocalPosition","react_default","ref","c","Component","defaultProps","MapContainer","styled","div","Map_templateObject","react","MapView_MapView","React","Card","PaddedCard_templateObject","DARK_GRAY2","dayjs","extend","LocalizedFormat","GridBox","TwoColumnTable_templateObject","NameCell","className","Classes","TEXT_MUTED","TEXT_SMALL","TwoColumnTable","entries","infos","slicedToArray","isValidElement","format","TwoColumnTable_NameCell","NotInitializedBox","StreamDetails_templateObject","StreamDetails","_this$props$streamSto2","hexCharacterID","PaddedCard","elevation","Elevation","THREE","esm","icon","title","description","ServerID","InstanceNum","CharacterID","CurrentMap","TwoColumnTable_TwoColumnTable","panel","StreamDetails_MapSelectorPanel","StreamDetails_OptionsPanel","MapSelectorPanel","onChange","setSelectedMapIndex","_this$props$streamSto","m","i","OptionsPanel","checked","label","setOption","smallClasses","EntityListItem","onClick","onSelect","_this$props","selected","child","castingSummary","active","List","UL","EntityList_templateObject","GRAY1","DARK_GRAY5","EntityListContainer","handleFilter","setState","filter","state","EntityList_EntityList","ROUND","leftIcon","placeholder","EntityList","predicate","entityList","filteredList","includes","_partition","reduce","elem","pass","fail","toConsumableArray","_partition2","npcs","players","EntityListItem_EntityListItem","ResourceRow","ResourceValue_templateObject","ResourceText","ResourceValue_templateObject2","ResourceBar","ResourceValue_templateObject3","ResourceValue","current","max","ratioPct","isNaN","style","PROGRESS_BAR","PROGRESS_NO_ANIMATION","PROGRESS_METER","backgroundColor","Summary","radians","_this$props$entity","Target","Level","HP","ResourceValue_ResourceValue","hp","maxHP","MP","mp","maxMP","ROSE3","TP","tp","GOLD3","X","Y","Z","Rot","toFixed","Tabs","onChangeTab","handleTabClick","renderTabTitle","_child$props","selectedTabId","tabTitles","tabPanels","getTabChildren","tab","renderTabPanel","TABS","TEXT_LARGE","marginRight","role","BPTabs","AdditionalInfo","lastActionTab","AdditionalInfo_TabWrapper","infoGetter","castInfoTab","castingDetails","statusEffectsTab","statusList","bNPCInfoTab","spawnInfoTab","Tabs_Tabs","TabWrapper","Section","Details_templateObject","NoEntityBox","Details_templateObject2","Details","Summary_Summary","AdditionalInfo_AdditionalInfo","SidePanel","Sidebar_templateObject","Title","H3","Sidebar_templateObject2","Sidebar","StreamDetails_StreamDetails","EntityList_EntityListContainer","Details_Details","AppRoot","App_templateObject","DARK_GRAY3","AppContent","App_templateObject2","App","Map_Map","Sidebar_Sidebar","LoadingApp_templateObject","LoadingApp","LoadingApp_AppRoot","intent","Boolean","hostname","getPluginParams","waitForInit","initPlugin","params","Main","initialize","LoadingApp_LoadingApp","App_App","MainWithState","mobxreact_esm","src_Main","ReactDOM","src_MainWithState","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d6b2cfe.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport default new class {\n  classJobFragment = gql`\n    fragment classJob on ClassJob {\n      id\n      name\n      abbreviation\n    }\n  `;\n\n  resourcesFragment = gql`\n    fragment resources on Resources {\n      hp\n      mp\n      tp\n      maxHP\n      maxMP\n      lastTick\n    }\n  `;\n\n  locationFragment = gql`\n    fragment location on Location {\n      x\n      y\n      z\n      orientation\n      lastUpdated\n    }\n  `;\n\n  actionFragment = gql`\n    fragment action on Action {\n      id\n      name\n      targetID\n      useTime\n    }\n  `;\n\n  statusFragment = gql`\n    fragment status on Status {\n      id\n      param\n      name\n      description\n      startedTime\n      duration\n      actorID\n      lastTick\n    }\n  `;\n\n  castingInfoFragment = gql`\n    fragment castingInfo on CastingInfo {\n      actionID\n      actionName\n      startTime\n      castTime\n      targetID\n      location {\n        ...location\n      }\n\n      castType\n      effectRange\n      xAxisModifier\n      omen\n    }\n  `;\n\n  placeFragment = gql`\n    fragment place on Place {\n      mapID\n      territoryID\n      maps {\n        key\n        id\n        SizeFactor\n        OffsetX\n        OffsetY\n        PlaceName\n        PlaceNameSub\n        TerritoryType\n      }\n    }\n  `;\n\n  enmityFragment = gql`\n    fragment enmity on Enmity {\n      targetHateRanking {\n        actorID\n        hate\n      }\n      nearbyEnemyHate {\n        enemyID\n        hatePercent\n      }\n    }\n  `;\n\n  entityFragment = gql`\n    fragment entity on Entity {\n      id\n      index\n      name\n      targetID\n      ownerID\n      level\n      classJob {\n        ...classJob\n      }\n      isNPC\n      isEnemy\n      isPet\n      bNPCInfo {\n        nameID\n        baseID\n        modelID\n        name\n        size\n        error\n      }\n      resources {\n        ...resources\n      }\n      location {\n        ...location\n      }\n      lastAction {\n        ...action\n      }\n      statuses {\n        ...status\n      }\n      lockonMarker\n      castingInfo {\n        ...castingInfo\n      }\n      rawSpawnJSONData\n    }\n    ${this.classJobFragment}\n    ${this.resourcesFragment}\n    ${this.locationFragment}\n    ${this.actionFragment}\n    ${this.statusFragment}\n    ${this.castingInfoFragment}\n  `;\n\n  streamFragment = gql`\n    fragment stream on Stream {\n      id\n      serverID\n      instanceNum\n      characterID\n\n      place {\n        ...place\n      }\n      enmity {\n        ...enmity\n      }\n\n      entities {\n        ...entity\n      }\n    }\n    ${this.placeFragment}\n    ${this.enmityFragment}\n    ${this.entityFragment}\n  `;\n\n  streamSubscription = gql`\n    subscription Streams {\n      streamEvent {\n        streamID\n        type {\n          __typename\n          ... on UpdateIDs {\n            serverID\n            instanceNum\n            characterID\n          }\n          ... on UpdateMap {\n            place {\n              ...place\n            }\n          }\n        }\n      }\n    }\n    ${this.placeFragment}\n  `;\n\n  entitySubscription = gql`\n    subscription Entities {\n      entityEvent {\n        streamID\n        entityID\n        type {\n          __typename\n          ... on AddEntity {\n            entity {\n              ...entity\n            }\n          }\n          ... on RemoveEntity {\n            id\n          }\n          ... on SetEntities {\n            entities {\n              ...entity\n            }\n          }\n          ... on UpdateTarget {\n            targetID\n          }\n          ... on UpdateClass {\n            classJob {\n              ...classJob\n            }\n          }\n          ... on UpdateLastAction {\n            action {\n              ...action\n            }\n          }\n          ... on UpdateCastingInfo {\n            castingInfo {\n              ...castingInfo\n            }\n          }\n          ... on UpsertStatus {\n            index\n            status {\n              ...status\n            }\n          }\n          ... on RemoveStatus {\n            index\n          }\n          ... on UpdateLocation {\n            location {\n              ...location\n            }\n          }\n          ... on UpdateResources {\n            resources {\n              ...resources\n            }\n          }\n          ... on UpdateLockonMarker {\n            lockonMarker\n          }\n        }\n      }\n    }\n    ${this.entityFragment}\n    ${this.actionFragment}\n    ${this.castingInfoFragment}\n    ${this.statusFragment}\n    ${this.locationFragment}\n    ${this.resourcesFragment}\n    ${this.classJobFragment}\n  `;\n\n  versionQuery = gql`\n    query Version {\n      apiVersion\n    }\n  `;\n\n  streamQuery = gql`\n    query GetStream($streamID: Int!) {\n      stream(streamID: $streamID) {\n        ...stream\n      }\n    }\n    ${this.streamFragment}\n  `;\n\n  listStreamsQuery = gql`\n    query AllStreams {\n      streams {\n        id\n      }\n    }\n  `;\n\n  hookMutation = gql`\n    mutation SendHookData($req: StreamRequest!) {\n      sendStreamRequest(request: $req)\n    }\n  `;\n}()\n","import gql from './gql';\n\nimport { ApolloLink, execute, makePromise, GraphQLRequest } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { onError } from \"apollo-link-error\";\n\nconst errHandlerLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nconst executeOperation = (httpLink: ApolloLink, operation: GraphQLRequest) => {\n  // Funnel errors into a single promise rejection\n  return new Promise<{ [key: string]: any }>((resolve, reject) => {\n    makePromise(execute(httpLink, operation))\n      .then((result) => {\n        if (result.data) {\n          resolve(result.data);\n        } else {\n          reject(result.errors);\n        }\n      })\n      .catch((error) => reject(error));\n  })\n};\n\nexport default class GQLClient {\n  private httpLink: ApolloLink;\n  private wsLink: ApolloLink;\n\n  constructor(apiURL: string, apiToken?: string) {\n    let httpOpts = (apiToken) ? {\n      headers: {\n        Authorization: apiToken,\n      }\n    } : {};\n    let wsConnectionParams = (apiToken) ? () => ({\n      authorization: apiToken,\n    }) : undefined;\n\n    this.httpLink = ApolloLink.from([\n      errHandlerLink,\n      new HttpLink({ uri: apiURL, ...httpOpts }),\n    ]);\n    this.wsLink = ApolloLink.from([\n      errHandlerLink,\n      new WebSocketLink({\n        uri: apiURL.replace('http://', 'ws://'),\n        options: {\n          reconnect: true,\n          connectionParams: wsConnectionParams,\n        },\n      }),\n    ]);\n  }\n\n  public getAPIVersion = async (): Promise<string> => {\n    const data = await executeOperation(\n      this.httpLink, { query: gql.versionQuery },\n    );\n    return data.apiVersion;\n  }\n\n  public listStreams = async () => {\n    const data = await executeOperation(\n      this.httpLink, { query: gql.listStreamsQuery },\n    );\n    return data.streams;\n  }\n\n  public getStream = async (streamID: number) => {\n    const variables = { streamID };\n    const data = await executeOperation(\n      this.httpLink, { query: gql.streamQuery, variables },\n    )\n    return data.stream;\n  }\n\n  public subscribeToStreamEvents = (\n    streamID: number, handleStreamEvent: (type: string, data: any) => void\n  ) =>\n    execute(this.wsLink, { query: gql.streamSubscription })\n      .subscribe({\n        next: (subscriptionData) => {\n          if (!subscriptionData.data) { return; }\n          let streamEvent = subscriptionData.data.streamEvent;\n          if (streamEvent.streamID !== streamID) { return; }\n          let { __typename, ...eventData } = streamEvent.type;\n          handleStreamEvent(__typename, eventData);\n        },\n      });\n\n  public subscribeToEntityEvents = (\n    streamID: number, handleEntityEvent: (entityID: number, type: string, data: any) => void\n  ) =>\n    execute(this.wsLink, { query: gql.entitySubscription })\n      .subscribe({\n        next: (subscriptionData) => {\n          if (!subscriptionData.data) { return; }\n          let entityEvent = subscriptionData.data.entityEvent;\n          if (entityEvent.streamID !== streamID) { return; }\n\n          let { entityID } = entityEvent;\n          let { __typename, ...eventData } = entityEvent.type;\n          handleEntityEvent(entityID, __typename, eventData);\n        },\n      });\n}\n","import { observable, action, computed, ObservableMap } from 'mobx';\nimport { InspectorOptions } from './stream';\n\nfunction toHex(id: number): string {\n  return `0x${('00000000' + id.toString(16)).slice(-8)}`\n}\n\nclass Interpolation {\n  public p0: Location;\n  public t0: number;\n  public p1: Location;\n  public t1: number;\n\n  private duration: number;\n\n  constructor(p0: Location, p1: Location, startTime: number) {\n    this.p0 = p0;\n    this.p1 = p1;\n    this.t0 = startTime;\n    this.duration = p1.lastUpdated - p0.lastUpdated;\n    this.t1 = this.t0 + this.duration;\n  }\n\n  pt(t: number): Location {\n    if (t <= this.t0) {\n      return this.p0;\n    } else if (t >= this.t1) {\n      return this.p1;\n    }\n    const lerpFactor = (t - this.t0) / (this.duration);\n    const xt = this.p0.x + (this.p1.x - this.p0.x) * lerpFactor;\n    const yt = this.p0.y + (this.p1.y - this.p0.y) * lerpFactor;\n    const zt = this.p0.z + (this.p1.z - this.p0.z) * lerpFactor;\n    return { x: xt, y: yt, z: zt, orientation: 0, lastUpdated: 0 };\n  }\n}\n\nexport interface BNPCInfo {\n  nameID: number;\n  baseID: number;\n  modelID: number;\n  name: string;\n  size: number;\n  error: string;\n}\n\nexport interface ClassJob {\n  id: number;\n  name: string;\n  abbreviation: string;\n}\nexport interface Location {\n  x: number;\n  y: number;\n  z: number;\n  orientation: number;\n  lastUpdated: number;\n}\n\nexport interface Resources {\n  hp: number;\n  mp: number;\n  tp: number;\n  maxHP: number;\n  maxMP: number;\n  lastTick: number;\n}\n\nexport interface Status {\n  id: number;\n  param: number;\n  name: string;\n  description: string;\n  startedTime: number;\n  duration: number;\n  actorID: number;\n  lastTick: number;\n}\n\nexport interface Action {\n  id: number;\n  name: string;\n  targetID: number;\n  useTime: number;\n}\n\nexport interface CastingInfo {\n  actionID: number;\n  actionName: string;\n  startTime: number;\n  castTime: number;\n  targetID: number;\n  location: Location;\n\n  castType: number;\n  effectRange: number;\n  xAxisModifier: number;\n  omen: string;\n\n  target?: Entity;\n}\n\nexport interface EntitySpec {\n  id: number;\n  index: number;\n  name: string;\n  targetID: number;\n  ownerID: number;\n  level: number;\n  classJob: ClassJob;\n  isNPC: boolean;\n  isEnemy: boolean;\n  isPet: boolean;\n  bNPCInfo?: BNPCInfo;\n  resources: Resources;\n  location: Location;\n  lastAction?: Action;\n  statuses: Status[];\n  lockonMarker: number;\n  castingInfo?: CastingInfo;\n  rawSpawnJSONData: string;\n}\n\nexport default class Entity {\n  id = 0;\n  index = -1;\n  name = \"\";\n  bNPCInfo?: BNPCInfo;\n  ownerID = 0;\n  isNPC = false;\n  isEnemy = false;\n  isPet = false;\n  rawSpawnData = {};\n\n  @observable targetID = 0;\n  @observable target?: Entity;\n  @observable level = -1;\n  @observable classJob: ClassJob;\n  @observable resources: Resources;\n  @observable location: Location;\n  @observable lastAction?: Action;\n  @observable castingInfo?: CastingInfo;;\n\n  statuses = observable.map<number, Status>();\n\n  interpBufffer: Interpolation[] = [];\n  @observable interpLocation: Location;\n\n  private options: InspectorOptions;\n\n  constructor(ent: EntitySpec, target: Entity | undefined, options: InspectorOptions) {\n    let {\n      id, index, name, bNPCInfo, ownerID, isNPC, isEnemy, isPet,\n      targetID, level, lastAction, castingInfo,\n    } = ent;\n    Object.assign(this, {\n      id, index, name, bNPCInfo, ownerID, isNPC, isEnemy, isPet,\n      targetID, level, lastAction, castingInfo,\n    });\n\n    this.classJob = ent.classJob;\n    this.resources = ent.resources;\n    this.location = ent.location;\n\n    this.target = target;\n    this.interpLocation = ent.location;\n    this.rawSpawnData = JSON.parse(ent.rawSpawnJSONData);\n    ent.statuses.forEach((s, idx) => {\n      if (s) { this.statuses.set(idx, s); }\n    });\n    this.options = options;\n  }\n\n  @action handleEntityEvent(typename: string, eventData: any) {\n    switch (typename) {\n      case \"UpdateTarget\":\n        this.targetID = eventData.targetID;\n        this.target = eventData.target;\n        break;\n      case \"UpdateClass\":\n        this.classJob = eventData.classJob;\n        break;\n      case \"UpdateLastAction\":\n        this.lastAction = eventData.action;\n        break;\n      case \"UpdateCastingInfo\":\n        this.castingInfo = eventData.castingInfo;\n        break;\n      case \"UpsertStatus\":\n        this.statuses.set(eventData.index, eventData.status);\n        break;\n      case \"RemoveStatus\":\n        this.statuses.delete(eventData.index);\n        break;\n      case \"UpdateLocation\":\n        let p0 = this.location;\n        this.location = eventData.location;\n        if (this.options.locationInterpolation) {\n          if (this.interpBufffer.length === 0) {\n            p0.lastUpdated = eventData.location.lastUpdated - 350;\n          }\n          this.interpBufffer.push(new Interpolation(p0, eventData.location, performance.now()));\n        }\n        break;\n      case \"UpdateResources\":\n        this.resources = eventData.resources;\n        break;\n    }\n  }\n\n  @action animationFrame(time: number) {\n    if (!this.options.locationInterpolation) {\n      return;\n    }\n    let interpolation: Interpolation | undefined;\n    while (this.interpBufffer.length > 0) {\n      if (time < this.interpBufffer[0].t0) {\n        return;\n      } else if (time > this.interpBufffer[0].t1) {\n        this.interpBufffer.shift();\n      } else {\n        interpolation = this.interpBufffer[0];\n        break;\n      }\n    }\n    if (interpolation) {\n      this.interpLocation = interpolation.pt(time);\n      return;\n    }\n    let { x: xi, y: yi, z: zi } = this.interpLocation;\n    let { x, y, z } = this.location;\n    let [dx, dy, dz] = [(xi - x), (yi - y), (zi - z)];\n    if (Math.sqrt(dx * dx + dy * dy + dz * dz) > 0.1) {\n      this.interpLocation = this.location;\n    }\n  }\n\n  @computed get realName() {\n    if (this.isNPC && this.bNPCInfo) {\n      return this.bNPCInfo.name || this.name;\n    }\n    return this.name;\n  }\n\n  @computed get hexID() {\n    return toHex(this.id);\n  }\n\n  @computed get hasTarget() {\n    return this.targetID !== 0xE0000000 && this.targetID !== 0;\n  }\n\n  @computed get targetString() {\n    if (!this.hasTarget) { return \"\" };\n    let name = (this.target && this.target.realName) || \"Unknown\";\n    return `${name} (${this.hexTargetID})`;\n  }\n\n  @computed get hexTargetID() {\n    return toHex(this.targetID);\n  }\n\n  @computed get castingSummary() {\n    if (!this.castingInfo) { return null; }\n    const { actionName, actionID } = this.castingInfo;\n    return `${actionName} (${actionID})`\n  }\n\n  @computed get castingDetails() {\n    if (!this.castingInfo) { return null; }\n\n    let info: { [key: string]: any } = Object.assign({}, this.castingInfo)\n    let name = (info.target && info.target.realName) || \"Unknown\";\n    info.targetString = `${name} (${toHex(info.targetID)})`;\n    delete info.targetID;\n    delete info.target;\n\n    return info;\n  }\n\n  @computed get statusList() {\n    return Object.fromEntries(this.statuses.toJS());\n  }\n\n  @computed get radius() {\n    if (this.bNPCInfo && this.bNPCInfo.size > 0) {\n      return this.bNPCInfo.size;\n    }\n    return 0.5;\n  }\n}\n","import { action, observable, computed } from 'mobx';\nimport GQLClient from '../api/gqlClient';\n\nimport Entity, { EntitySpec } from './entity';\n\nimport semver from 'semver';\n\nexport interface StreamStoreProps {\n  streamStore: Stream;\n}\nexport const streamStoreDefaultProps = { streamStore: (null as unknown) as Stream };\n\nexport interface MapInfo {\n  key: number;\n  id: string;\n  SizeFactor: number;\n  OffsetX: number;\n  OffsetY: number;\n  PlaceName: string;\n  PlaceNameSub: string;\n  TerritoryType: string;\n}\n\nexport interface Place {\n  mapID: number;\n  territoryID: number;\n  maps: MapInfo[];\n}\n\nexport interface InspectorOptions {\n  followSelection: boolean;\n  locationInterpolation: boolean;\n}\n\nexport interface PluginParams {\n  apiURL: string;\n  apiToken?: string;\n  streamID?: number;\n}\n\nclass Stream {\n  @observable loading = true;\n  @observable error?: string;\n\n  gqlClient?: GQLClient;\n  streamID = 0;\n  apiURL = '';\n\n  @observable serverID = 0;\n  @observable instanceNum = 0;\n  @observable characterID = 0;\n\n  @observable place: Place = { mapID: 0, territoryID: 0, maps: [] };\n  @observable entities = new Map<number, Entity>();\n\n  @observable selectedEntityID = 0;\n  @observable selectedMapIndex = 0;\n\n  @observable options: InspectorOptions = {\n    followSelection: true,\n    locationInterpolation: true,\n  };\n\n  @action async initialize(pluginParams: PluginParams) {\n    this.gqlClient = new GQLClient(pluginParams.apiURL, pluginParams.apiToken);\n\n    const apiVersion = await this.gqlClient.getAPIVersion();\n\n    if (!semver.satisfies(apiVersion, '>=0.2.0-beta', { includePrerelease: true })) {\n      this.error = \"Your version of Aetherometer is no longer supported by \" +\n        \"this plugin. Please update to a newer version.\";\n      return;\n    }\n\n    const streamID = this.streamID = await this.getActiveStreamID(pluginParams);\n    this.apiURL = pluginParams.apiURL;\n    this.subscribeToStreamEvents();\n    this.subscribeToEntityEvents();\n\n    if (!streamID) {\n      this.error = \"Stream ID not found!\";\n      return;\n    }\n\n    const stream = await this.gqlClient.getStream(streamID);\n    const { serverID, instanceNum, characterID, place, entities } = stream;\n    this.serverID = serverID;\n    this.instanceNum = instanceNum;\n    this.characterID = characterID;\n    this.place = place;\n    for (let ent of entities) {\n      this.entities.set(ent.id, new Entity(ent, undefined, this.options));\n    }\n    window.requestAnimationFrame(this.animationFrame);\n\n    this.entities.forEach(ent => {\n      let targetEnt = this.entities.get(ent.targetID);\n      ent.target = targetEnt;\n      if (ent.castingInfo) {\n        let castingTargetEnt = this.entities.get(ent.castingInfo.targetID);\n        ent.castingInfo.target = castingTargetEnt;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  async getActiveStreamID(pluginParams: PluginParams) {\n    if (pluginParams.streamID) {\n      return pluginParams.streamID;\n    } else {\n      const streams = await this.gqlClient!.listStreams();\n      if (streams.length > 0) {\n        return streams[0].id;\n      }\n    }\n    return 0;\n  }\n\n  @action subscribeToStreamEvents() {\n    return this.gqlClient!.subscribeToStreamEvents(\n      this.streamID,\n      action((typename: string, eventData: any) => {\n        if (this.loading) { return; }\n        switch (typename) {\n          case \"UpdateIDs\":\n            this.serverID = eventData.serverID;\n            this.instanceNum = eventData.instanceNum;\n            this.characterID = eventData.characterID;\n            break;\n          case \"UpdateMap\":\n            this.place = eventData.place;\n            this.selectedMapIndex = 0;\n            break;\n        }\n      }),\n    );\n  }\n\n  @action subscribeToEntityEvents() {\n    return this.gqlClient!.subscribeToEntityEvents(\n      this.streamID,\n      action((entityID: number, typename: string, eventData: any) => {\n        if (this.loading) { return; }\n\n        if (typename === \"AddEntity\") {\n          this.addEntity(eventData.entity);\n          return;\n        } else if (typename === \"RemoveEntity\") {\n          this.removeEntity(eventData.id);\n          return;\n        } else if (typename === \"SetEntities\") {\n          this.setEntities(eventData.entities);\n          return;\n        }\n        let ent = this.entities.get(entityID);\n        if (typename === \"UpdateTarget\") {\n          let targetEnt = this.entities.get(eventData.targetID);\n          if (targetEnt) {\n            eventData.target = targetEnt;\n          }\n        }\n        if (typename === \"UpdateCastingInfo\") {\n          if (eventData.castingInfo) {\n            let targetEnt = this.entities.get(eventData.castingInfo.targetID);\n            if (targetEnt) {\n              eventData.castingInfo.target = targetEnt;\n            }\n          }\n        }\n        if (ent) {\n          ent.handleEntityEvent(typename, eventData);\n        }\n      }),\n    );\n  }\n\n  @action addEntity(ent: EntitySpec) {\n    let targetEnt = this.entities.get(ent.targetID);\n    let currentCharacter = new Entity(ent, targetEnt, this.options);\n    this.entities.set(ent.id, currentCharacter);\n  }\n\n  @action removeEntity(id: number) {\n    this.entities.delete(id);\n  }\n\n  @action setEntities(entities: EntitySpec[]) {\n    this.entities.clear();\n    entities.forEach((ent) => {\n      this.addEntity(ent);\n    });\n  }\n\n  @action animationFrame = (time: number) => {\n    if (this.options.locationInterpolation) {\n      this.entities.forEach((ent) => ent.animationFrame(time));\n    }\n    window.requestAnimationFrame(this.animationFrame)\n  }\n\n  @action setSelectedEntityID(id: number) {\n    this.selectedEntityID = id;\n  }\n\n  @action setSelectedMapIndex(idx: number) {\n    this.selectedMapIndex = idx;\n  }\n\n  @action setOption(optionName: 'followSelection' | 'locationInterpolation', toggle: boolean) {\n    this.options[optionName] = toggle;\n  }\n\n  @computed get hexCharacterID() {\n    if (this.currentCharacter) {\n      return this.currentCharacter.hexID;\n    }\n    return '0x00000000';\n  }\n\n  @computed get currentCharacter() {\n    return this.entities.get(this.characterID);\n  }\n\n  @computed get selectedEntity() {\n    if (this.entities.has(this.selectedEntityID)) {\n      return this.entities.get(this.selectedEntityID);\n    } else {\n      return this.currentCharacter;\n    }\n  }\n\n  @computed get entityList() {\n    let ents: Entity[] = [];\n    this.entities.forEach((ent) => ents.push(ent));\n    ents.sort((a, b) => a.index - b.index);\n    return ents;\n  }\n\n\n  @computed get currentMap(): MapInfo {\n    if (this.place && this.place.maps.length > 0) {\n      return this.place.maps[this.selectedMapIndex];\n    }\n\n    return {\n      key: 1,\n      id: \"default/00\",\n      SizeFactor: 100,\n      OffsetX: 0,\n      OffsetY: 0,\n      PlaceName: \"Eorzea\",\n      PlaceNameSub: \"\",\n      TerritoryType: \"\"\n    };\n  }\n}\n\nexport default new Stream();\n","import * as PIXI from 'pixi.js';\n\ninterface MapBackgroundProps {\n  key: number;\n  SizeFactor: number;\n  OffsetX: number;\n  OffsetY: number;\n}\n\nexport default class MapBackground extends PIXI.Sprite {\n  constructor(mapProps: MapBackgroundProps, apiURL: string) {\n    let { key, SizeFactor, OffsetX, OffsetY } = mapProps;\n\n    const url = `${apiURL.replace('query', 'map')}/${key}`;\n    const scaleFactor = SizeFactor / 100;\n    const texture = PIXI.Texture.from(url);\n    super(texture)\n\n    const size = 2048/scaleFactor;\n    this.anchor.x = 0.5;\n    this.anchor.y = 0.5;\n    this.height = size;\n    this.width = size;\n    this.position.x = -OffsetX;\n    this.position.y = -OffsetY;\n  }\n\n  dispose() {\n    this.destroy({children: true});\n  }\n}","import * as PIXI from 'pixi.js';\n\nimport { Colors } from '@blueprintjs/core';\n\nimport { observe } from 'mobx';\n\nimport Entity from '../store/entity';\nimport { InspectorOptions } from '../store/stream';\n\nfunction getColor(entity: Entity) {\n  if (entity.isEnemy && entity.hasTarget) {\n    return Colors.RED3;\n  } else if (entity.isEnemy) {\n    return Colors.VIOLET3;\n  } else if (entity.isNPC) {\n    return Colors.FOREST3;\n  }\n  return Colors.COBALT3;\n}\n\nconst coneCanvas = (() => {\n  var canvas = document.createElement('canvas')\n  canvas.width = 512;\n  canvas.height = 512;\n  var ctx = canvas.getContext('2d')!;\n\n  ctx.beginPath();\n  ctx.moveTo(0, 256);\n  ctx.arc(0, 256, 256, -Math.PI/6, Math.PI/6);\n  ctx.lineTo(0, 256);\n\n  var gradient = ctx.createLinearGradient(0, 0, 230, 0);\n  gradient.addColorStop(0.0, 'rgba(255, 255, 255, 0.6)');\n  gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.4)');\n  gradient.addColorStop(1.0, 'rgba(255, 255, 255, 0)');\n\n  ctx.fillStyle = gradient;\n  ctx.fill();\n  return canvas;\n})();\n\nconst selectIndicatorCanvas = (() => {\n  var canvas = document.createElement('canvas')\n  canvas.width = 512;\n  canvas.height = 512;\n  var ctx = canvas.getContext('2d')!;\n  ctx.arc(256, 256, 200, 0, 2*Math.PI);\n  ctx.lineWidth = 50;\n  ctx.strokeStyle = \"#FF0000\";\n  ctx.stroke();\n  return canvas;\n})();\n\nconst entityCircleCanvas = (() => {\n  var canvas = document.createElement('canvas')\n  canvas.width = 1024;\n  canvas.height = 1024;\n\n  var ctx = canvas.getContext('2d')!;\n\n  ctx.fillStyle = '#FFFFFF';\n  ctx.strokeStyle = '#FFFFFF';\n  ctx.lineCap = 'round';\n\n  ctx.globalAlpha = 0.5;\n  ctx.beginPath();\n  ctx.arc(512, 512, 512, 0, 2*Math.PI);\n  ctx.fill();\n\n  ctx.globalAlpha = 1.0;\n  ctx.lineWidth = 32;\n\n  ctx.beginPath();\n  ctx.arc(512, 512, 512-(ctx.lineWidth/2), 0.25*Math.PI, 0.75*Math.PI);\n  ctx.stroke();\n\n  ctx.beginPath();\n  ctx.arc(512, 512, 512-(ctx.lineWidth/2), 1.25*Math.PI, 1.75*Math.PI);\n  ctx.stroke();\n\n  ctx.lineWidth = 64;\n  ctx.beginPath();\n  ctx.arc(512, 512, 512-(ctx.lineWidth/2), 1.75*Math.PI, 0.25*Math.PI);\n  ctx.stroke();\n\n  ctx.lineWidth = 128;\n  ctx.beginPath();\n  ctx.arc(512, 512, 512-(ctx.lineWidth/2), 1.9*Math.PI, 0.1*Math.PI);\n  ctx.stroke();\n\n  return canvas;\n})();\n\nconst createCone = () => {\n  let cone = new PIXI.Sprite(new PIXI.Texture(new PIXI.BaseTexture(coneCanvas)));\n  cone.height = 100 * 512;\n  cone.width = 100 * 512;\n  cone.anchor.x = 0;\n  cone.anchor.y = 0.5;\n  return cone;\n};\n\nconst createSelectorIndicator = () => {\n  let marker = new PIXI.Sprite(new PIXI.Texture(new PIXI.BaseTexture(selectIndicatorCanvas)));\n  marker.height = 1.7 * 1024;\n  marker.width = 1.7 * 1024;\n  marker.anchor.x = 0.5;\n  marker.anchor.y = 0.5;\n  return marker;\n};\n\nexport default class MapEntity extends PIXI.Sprite {\n  private targetObserverDispose?: () => void;\n  private locationObserverDispose?: () => void;\n  private interpLocationObserverDispose?: () => void;\n  private castingObserverDispose?: () => void;\n\n  private baseEntity: Entity;\n  private options: InspectorOptions;\n\n  private selector?: PIXI.Sprite;\n\n  constructor(\n    entity: Entity,\n    telegraphUpdated: () => void,\n    options: InspectorOptions,\n  ) {\n    super(new PIXI.Texture(new PIXI.BaseTexture(entityCircleCanvas)));\n    this.baseEntity = entity;\n    this.options = options;\n\n    if (entity.index === 0) {\n      this.addChild(createCone());\n    }\n    const radius = this.baseEntity.radius;\n    this.anchor.x = 0.5;\n    this.anchor.y = 0.5;\n    this.height = radius*2;\n    this.width = radius*2;\n\n    this.interactive = true;\n    this.interactiveChildren = false;\n    this.cursor = 'pointer';\n\n    this.targetUpdated();\n    this.locationUpdated();\n    this.interpLocationUpdated();\n    telegraphUpdated();\n\n    this.targetObserverDispose = observe(this.baseEntity, \"target\", this.targetUpdated);\n    this.locationObserverDispose = observe(this.baseEntity, \"location\", this.locationUpdated);\n    this.interpLocationObserverDispose = observe(this.baseEntity, \"interpLocation\", this.interpLocationUpdated);\n    this.castingObserverDispose = observe(this.baseEntity, \"castingInfo\", telegraphUpdated);\n  }\n\n  locationUpdated = () => {\n    let { x, z, orientation } = this.baseEntity.location;\n    if (!this.options.locationInterpolation) {\n      this.position.x = x;\n      this.position.y = z;\n    }\n    this.rotation = -Math.PI/2 - orientation;\n  }\n\n  interpLocationUpdated = () => {\n    if (!this.options.locationInterpolation) {\n      return;\n    }\n    let { x, z } = this.baseEntity.interpLocation;\n    this.position.x = x;\n    this.position.y = z;\n  }\n\n  targetUpdated = () => {\n    const color = getColor(this.baseEntity);\n    this.tint =  parseInt(color.substring(1), 16);\n  }\n\n  select = () => {\n    this.selector = createSelectorIndicator();\n    this.addChild(this.selector);\n  }\n\n  unselect = () => {\n    if (this.selector) {\n      this.removeChild(this.selector);\n      this.selector = undefined;\n    }\n  }\n\n  dispose() {\n    this.destroy({children: true});\n\n    if (this.targetObserverDispose) { this.targetObserverDispose(); }\n    if (this.locationObserverDispose) { this.locationObserverDispose(); }\n    if (this.interpLocationObserverDispose) { this.interpLocationObserverDispose(); }\n    if (this.castingObserverDispose) { this.castingObserverDispose(); }\n  }\n}","import * as PIXI from 'pixi.js';\n\nimport { Colors } from '@blueprintjs/core';\nimport Entity, { CastingInfo } from '../store/entity';\n\nfunction extractAngle(omen: string) {\n  let re = /gl_fan(\\d+)/;\n  let match = re.exec(omen);\n  if (!match || match.length < 2) {\n    return 0;\n  }\n  return Number(match[1]);\n}\n\nconst remapCast = (castingInfo: CastingInfo) => {\n  switch (castingInfo.actionID) {\n    case 6635:\n    case 6665:\n    case 6885:\n      return Object.assign({ ...castingInfo }, {\n        xAxisModifier: 16,\n        effectRange: 100,\n        castType: 11,\n      });\n    case 6637:\n      return Object.assign({ ...castingInfo }, {\n        castType: 10,\n      });\n    case 13061:\n    case 13062:\n    case 13063:\n    case 13103:\n    case 13104:\n    case 13105:\n    case 13059:\n    case 13060:\n    case 13106:\n    case 13107:\n      return Object.assign({ ...castingInfo }, {\n        castType: 4,\n      });\n    case 13108:\n      return Object.assign({ ...castingInfo }, {\n        castType: 3,\n      });\n  }\n  return castingInfo;\n};\n\nconst knownFans: { [k: number]: number } = {\n  12898: 210,\n  12899: 210,\n  12900: 210,\n  12901: 210,\n  12904: 210,\n  12905: 210,\n  13108: 330,\n};\n\ntype TelegraphType = \"\" | \"rectangle\" | \"cross\" | \"fan\" | \"circle\" | \"halo\";\n\nexport default class Telegraph extends PIXI.Sprite {\n  public telegraphTexture?: PIXI.RenderTexture;\n  public telegraphType?: TelegraphType;\n\n  constructor(castingEntity: Entity, renderer: PIXI.Renderer, rotationOffset: number) {\n    if (!castingEntity.castingInfo) {\n      super();\n      return;\n    }\n\n    let {\n      actionID, castType, effectRange, xAxisModifier, omen, target, location\n    } = remapCast(castingEntity.castingInfo);\n\n    let additionalRange = 0;\n    if (target) {\n      additionalRange = target.radius;\n    }\n\n    let graphics = new PIXI.Graphics();\n    graphics.beginFill(0xffffff, 0.2);\n    graphics.lineStyle(16, 0xffffff, 1, 0);\n\n    effectRange += additionalRange;\n\n    let telegraphType: TelegraphType = \"\";\n    switch (castType) {\n      case 4:\n      case 8:\n      case 12:\n        telegraphType = \"rectangle\";\n        graphics.drawRect(0, 0, 1024, 1024);\n        break;\n      case 3:\n      case 13:\n        let angle = extractAngle(omen)\n        if (actionID in knownFans) {\n          angle = knownFans[actionID];\n        }\n        if (angle === 0) {\n          break;\n        }\n        let radAngle = (angle / 180) * Math.PI;\n        telegraphType = \"fan\";\n        graphics.moveTo(512, 512);\n        graphics.arc(512, 512, 512, -radAngle / 2, radAngle / 2);\n        graphics.closePath();\n        break;\n      case 2:\n      case 5:\n      case 6:\n      case 7:\n        telegraphType = \"circle\";\n        graphics.drawCircle(512, 512, 512);\n        graphics.closePath();\n        break;\n      case 10:\n        telegraphType = \"halo\";\n        graphics.drawCircle(512, 512, 512);\n        graphics.closePath();\n\n        // Size is not accurate, but enough to get the point across\n        graphics.beginHole();\n        graphics.drawCircle(512, 512, 128);\n        graphics.closePath();\n        graphics.endHole();\n        break;\n      case 11:\n        telegraphType = \"cross\";\n        graphics.drawRect(0, 0, 1024, 1024);\n        break;\n    }\n\n    if (telegraphType === \"\") {\n      super();\n      return;\n    }\n\n    const baseRenderTex = new PIXI.BaseRenderTexture({\n      width: 1024,\n      height: 1024,\n      scaleMode: PIXI.SCALE_MODES.LINEAR,\n    });\n\n    const telegraphTexture = new PIXI.RenderTexture(baseRenderTex);\n    renderer.render(graphics, telegraphTexture, false);\n\n    super(telegraphTexture);\n    this.telegraphTexture = telegraphTexture;\n    this.telegraphType = telegraphType;\n\n    let color = Colors.COBALT5;\n    if (castingEntity.isEnemy) {\n      color = Colors.VERMILION3;\n    }\n    switch (telegraphType) {\n      case \"cross\":\n      case \"rectangle\":\n        this.anchor.x = 0.5;\n        this.anchor.y = 0;\n        this.width = xAxisModifier;\n        this.height = effectRange;\n        this.rotation = - location.orientation + Math.PI;\n        break;\n      case \"fan\":\n      case \"halo\":\n      case \"circle\":\n        this.anchor.x = 0.5;\n        this.anchor.y = 0.5;\n        this.width = effectRange * 2;\n        this.height = effectRange * 2;\n        this.rotation = - location.orientation - Math.PI / 2;\n    }\n\n    if (rotationOffset) {\n      this.rotation = this.rotation + rotationOffset;\n    }\n\n    this.position.x = location.x;\n    this.position.y = location.z;\n    this.tint = parseInt(color.substring(1), 16);\n  }\n\n  createCompositeTelegraph(castingEntity: Entity, renderer: PIXI.Renderer): PIXI.DisplayObject | undefined {\n    if (this.telegraphTexture) {\n      if (this.telegraphType === \"cross\") {\n        let crossContainer = new PIXI.Container();\n        let subSprite1 = new Telegraph(castingEntity, renderer, Math.PI / 2);\n        let subSprite2 = new Telegraph(castingEntity, renderer, -Math.PI / 2);\n        let subSprite3 = new Telegraph(castingEntity, renderer, Math.PI);\n        crossContainer.addChild(this);\n        crossContainer.addChild(subSprite1);\n        crossContainer.addChild(subSprite2);\n        crossContainer.addChild(subSprite3);\n        return crossContainer;\n      }\n      return this;\n    }\n  }\n\n  destroy() {\n    if (this.telegraphTexture) { this.telegraphTexture.destroy(true); }\n    super.destroy({ children: true, texture: true, baseTexture: true });\n  }\n}\n","import React, { Component } from 'react';\n\nimport * as PIXI from 'pixi.js';\nimport { Viewport } from 'pixi-viewport';\n\nimport { inject, observer } from 'mobx-react';\n\nimport MapBackground from './MapBackground';\nimport MapEntity from './MapEntity';\nimport MapTelegraph from './MapTelegraph';\nimport { observe, IMapDidChange, ObservableMap } from 'mobx';\nimport { StreamStoreProps, streamStoreDefaultProps, MapInfo } from '../store/stream';\nimport Entity from '../store/entity';\n\n// interface ViewportFixed {\n//   screenHeight: number;\n//   fixHeight()\n// }\n@inject('streamStore')\n@observer\nexport default class MapView extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  private _canvas?: HTMLCanvasElement;\n  private app?: PIXI.Application;\n  private viewport?: Viewport;\n  private entityContainer = new PIXI.Container();\n  private telegraphsContainer = new PIXI.Container();\n  private mapContainer = new PIXI.Container();\n\n  private entitySprites: { [key: number]: MapEntity } = {};\n  private telegraphSprites: { [key: number]: PIXI.DisplayObject } = {};\n  private mapSprite?: MapBackground;\n\n  private entityObserverDispose?: () => void;\n  private mapObserverDispose?: () => void;\n  private selectedEntityObserverDispose?: () => void;\n  private optionsObserverDispose?: () => void;\n\n  private coordText = new PIXI.Text('', { fontFamily: 'Arial', fontSize: 24, fill: 0x000000, align: 'center' });\n  private hoverName?: string;\n\n  componentDidMount() {\n    this.app = new PIXI.Application({\n      width: 100,\n      height: 100,\n      view: this._canvas,\n      antialias: true,\n    });\n\n    this.viewport = new Viewport({\n      interaction: this.app.renderer.plugins.interaction,\n    });\n\n    this.viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .decelerate();\n\n    this.viewport.zoomPercent(8);\n\n    this.app.stage.addChild(this.viewport);\n\n    this.viewport.addChild(this.mapContainer);\n    this.viewport.addChild(this.telegraphsContainer);\n    this.viewport.addChild(this.entityContainer);\n\n    window.addEventListener('resize', this.resize);\n    this.resize();\n\n    this.updateMap(this.props.streamStore.currentMap);\n\n    this.props.streamStore.entities.forEach((entity, key) => {\n      this.addEntity(key, entity);\n      this.updateTelegraph(key, entity);\n    });\n\n    this.entityObserverDispose = observe<number, Entity>(\n      this.props.streamStore.entities as ObservableMap<number, Entity>,\n      this.handleEntityChange,\n    );\n\n    this.mapObserverDispose = observe(\n      this.props.streamStore, \"currentMap\",\n      (change) => this.updateMap(change.newValue),\n    );\n\n    this.selectedEntityObserverDispose = observe(\n      this.props.streamStore, \"selectedEntity\",\n      (change) => this.updateEntitySelection(change.oldValue, change.newValue),\n    );\n    this.updateEntitySelection(undefined, this.props.streamStore.selectedEntity);\n\n    this.optionsObserverDispose = observe(\n      this.props.streamStore.options,\n      (change) => {\n        if (change.type === \"update\") { this.updateOptions(change.name, change.newValue); }\n      },\n    );\n\n    this.coordText.x = 0;\n    this.coordText.y = 0;\n    let moveHandler = (e: any) => {\n      let pos = e.data.getLocalPosition(this.mapContainer);\n      this.setOverlay(this.hoverName || '', pos.x, pos.y);\n    };\n    this.app.stage.interactive = true;\n    this.app.stage.on(\"pointermove\", moveHandler);\n\n    this.app.stage.addChild(this.coordText);\n  }\n\n  resize = () => {\n    if (!this.app || !this.viewport) { return; }\n    const parent = this.app.view.parentNode as HTMLElement;\n    this.app.renderer.resize(parent.clientWidth, parent.clientHeight - 4);\n    this.viewport.resize(this.app.screen.width, this.app.screen.height);\n  }\n\n  setOverlay = (name: string, posx: number, posy: number) => {\n    let prefix = '';\n    if (name) {\n      prefix = `${name} `\n    }\n    this.coordText.text = `${prefix}(${posx}, ${posy})`;\n  }\n\n  handleEntityChange = (change: IMapDidChange<number, Entity>) => {\n    if (change.type === \"add\" || change.type === \"update\") {\n      this.addEntity(change.name, change.newValue);\n    } else if (change.type === \"delete\") {\n      this.removeEntity(change.name);\n    }\n  }\n\n  addEntity = (key: number, entity: Entity) => {\n    if (!this.app) { return; }\n    if (key in this.entitySprites) {\n      this.removeEntity(key);\n    }\n    let sprite = this.entitySprites[key] = new MapEntity(\n      entity,\n      () => this.updateTelegraph(key, entity),\n      this.props.streamStore.options,\n    );\n    sprite.on(\"pointerover\", (e: any) => {\n      this.hoverName = e.currentTarget.baseEntity.realName;\n    });\n    sprite.on(\"pointerout\", (e: any) => {\n      if (this.hoverName === e.currentTarget.baseEntity.realName) {\n        this.hoverName = '';\n      }\n    });\n    sprite.on(\"click\", (e: any) => {\n      this.props.streamStore.setSelectedEntityID(e.currentTarget.baseEntity.id);\n    });\n    this.entityContainer.addChild(sprite);\n  }\n\n  removeEntity = (key: number) => {\n    this.removeTelegraph(key);\n    if (key in this.entitySprites) {\n      let sprite = this.entitySprites[key];\n      this.entityContainer.removeChild(sprite);\n      sprite.dispose();\n      delete this.entitySprites[key];\n    }\n  }\n\n  removeTelegraph = (key: number) => {\n    if (key in this.telegraphSprites) {\n      let telegraph = this.telegraphSprites[key];\n      this.telegraphsContainer.removeChild(telegraph);\n      telegraph.destroy();\n      delete this.telegraphSprites[key];\n    }\n  }\n\n  updateTelegraph = (key: number, entity: Entity) => {\n    if (!this.app) { return; }\n\n    this.removeTelegraph(key);\n\n    const telegraph = new MapTelegraph(entity, this.app.renderer, 0);\n    let sprite = telegraph.createCompositeTelegraph(entity, this.app.renderer);\n    if (sprite) {\n      this.telegraphSprites[key] = sprite;\n      this.telegraphsContainer.addChild(sprite);\n    }\n  }\n\n  updateMap = (mapInfo: MapInfo) => {\n    if (!this.viewport) { return; }\n\n    if (this.mapSprite) {\n      this.mapContainer.removeChild(this.mapSprite);\n      this.mapSprite.dispose();\n    }\n    this.mapSprite = undefined;\n\n    this.mapSprite = new MapBackground(mapInfo, this.props.streamStore.apiURL);\n\n    this.mapContainer.addChild(this.mapSprite);\n    let height = this.mapSprite.height;\n    let width = this.mapSprite.width;\n    this.viewport.worldHeight = height;\n    this.viewport.worldWidth = width;\n    this.viewport.clampZoom({\n      maxWidth: width,\n      maxHeight: height,\n    });\n\n    let centerX = this.mapSprite.position.x;\n    let centerY = this.mapSprite.position.y;\n    this.viewport.moveCenter(centerX, centerY);\n\n    let leftClamp = centerX - width / 2;\n    let rightClamp = centerX + width / 2;\n    let topClamp = centerY - height / 2;\n    let bottomClamp = centerY + height / 2;\n    this.viewport.clamp({\n      left: leftClamp,\n      top: topClamp,\n      right: rightClamp,\n      bottom: bottomClamp,\n    })\n  }\n\n  updateEntitySelection = (oldSelection?: Entity, newSelection?: Entity) => {\n    if (!this.viewport) { return; }\n    let oldID = (oldSelection && oldSelection.id) || 0;\n    let newID = (newSelection && newSelection.id) || 0;\n    let oldSprite = this.entitySprites[oldID];\n    let curSprite = this.entitySprites[newID];\n    this.viewport.plugins.remove('follow');\n    if (oldSprite) {\n      oldSprite.unselect();\n    }\n    if (curSprite) {\n      if (this.props.streamStore.options.followSelection) {\n        this.viewport.follow(curSprite);\n      }\n      curSprite.select();\n    }\n  }\n\n  updateOptions = (optionName: string | number | symbol, newValue: boolean) => {\n    if (!this.viewport) { return; }\n    if (optionName === \"followSelection\") {\n      if (newValue) {\n        let sprite = this.entitySprites[this.props.streamStore.selectedEntity!.id];\n        if (sprite) {\n          this.viewport.follow(sprite);\n        }\n      } else {\n        this.viewport.plugins.remove('follow');\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.entityObserverDispose) { this.entityObserverDispose(); }\n    if (this.mapObserverDispose) { this.mapObserverDispose(); }\n    if (this.selectedEntityObserverDispose) { this.selectedEntityObserverDispose(); }\n    if (this.optionsObserverDispose) { this.optionsObserverDispose(); }\n\n    if (this.app) { this.app.destroy(); }\n  }\n\n  render() {\n    return (\n      <canvas ref={(c) => { if (c) { this._canvas = c; } }} />\n    )\n  }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport MapView from './MapView';\n\nconst MapContainer = styled.div`\n  flex: 1 0 400px;\n  min-width: 0;\n  position: relative;\n`;\n\nexport default class Map extends React.Component {\n  render() {\n    return (\n      <MapContainer>\n        <MapView />\n      </MapContainer>\n    );\n  }\n}","import { Card, Colors } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nexport default styled(Card)`\n  padding: 20px;\n  margin: 20px;\n  && {\n    background-color: ${Colors.DARK_GRAY2};\n  }\n`;\n\n","import React, { Component } from 'react';\nimport { Classes } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport dayjs from 'dayjs';\n\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat'\ndayjs.extend(LocalizedFormat)\n\nconst GridBox = styled.div`\n  display: grid;\n  grid-row-gap: 5px;\n  grid-column-gap: 10px;\n  grid-template-columns: max-content auto;\n  grid-auto-rows: minmax(18px, auto);\n`;\n\nconst NameCell = (props: { children: any }) =>\n  <div className={`${Classes.TEXT_MUTED} ${Classes.TEXT_SMALL}`}>{props.children}</div>\n\n\ninterface TwoColumnTableProps {\n  infos: { [key: string]: any } | Array<{ [key: string]: any }>;\n}\n\nexport default class TwoColumnTable extends Component<TwoColumnTableProps> {\n  render() {\n    let entries: JSX.Element[] = [];\n    Object.entries(this.props.infos).forEach(([key, value]) => {\n      let t = typeof value;\n      if (t !== \"number\" && t !== \"string\" && !React.isValidElement(value)) {\n        if (!value) {\n          value = (<div></div>);\n        } else {\n          value = (<TwoColumnTable infos={value} />);\n        }\n      }\n      if (key === \"lastUpdated\" ||\n          key === \"lastTick\" ||\n          key === \"startedTime\" ||\n          key === \"useTime\") {\n        value = dayjs(value).format(\"L HH:mm:ss.SSS\");\n      }\n\n      entries.push(<NameCell key={`${key}-name`}>{key}</NameCell>);\n      entries.push(<div key={`${key}-info`}>{value}</div>);\n    });\n\n    return (\n      <GridBox>\n        {entries}\n      </GridBox>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { H5, Elevation, NonIdealState, Tab, Tabs, HTMLSelect, Switch } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport { inject, observer } from 'mobx-react';\n\nimport PaddedCard from './PaddedCard';\nimport TwoColumnTable from './TwoColumnTable';\nimport { StreamStoreProps, streamStoreDefaultProps } from '../store/stream';\n\nconst NotInitializedBox = styled.div`\n  height: 200px;\n`;\n\n@inject(\"streamStore\")\n@observer\nexport default class StreamDetails extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  render() {\n    const { streamID, serverID, instanceNum, hexCharacterID, currentMap } = this.props.streamStore;\n    if (!serverID) {\n      return (\n        <PaddedCard elevation={Elevation.THREE}>\n          <NotInitializedBox>\n            <NonIdealState\n              icon=\"database\"\n              title=\"Not yet initialized.\"\n              description=\"The server has not yet been initialized. Please rezone to populate the data.\"\n            />\n          </NotInitializedBox>\n        </PaddedCard>\n      );\n    }\n    const infos = {\n      ServerID: serverID,\n      InstanceNum: instanceNum,\n      CharacterID: hexCharacterID,\n      CurrentMap: currentMap,\n    };\n\n\n    return (\n      <PaddedCard elevation={Elevation.THREE}>\n        <H5>Stream {streamID}</H5>\n        <TwoColumnTable infos={infos} />\n        <Tabs id=\"ViewControls\">\n          <Tab id=\"map\" title=\"Map\" panel={<MapSelectorPanel />} />\n          <Tab id=\"options\" title=\"Options\" panel={<OptionsPanel />} />\n        </Tabs>\n      </PaddedCard>\n    );\n  }\n}\n\n@inject(\"streamStore\")\n@observer\nclass MapSelectorPanel extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.props.streamStore.setSelectedMapIndex(Number(e.currentTarget.value));\n  }\n\n  render() {\n    const { place, selectedMapIndex } = this.props.streamStore;\n\n    return (\n      <div>\n        <HTMLSelect onChange={this.onChange} value={selectedMapIndex}>\n          {place.maps.map((m, i) => <option key={i} value={i}>{m.PlaceName}{m.PlaceNameSub && ` - ${m.PlaceNameSub}`}</option>)}\n        </HTMLSelect>\n      </div>\n    );\n  }\n}\n\n@inject(\"streamStore\")\n@observer\nclass OptionsPanel extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  render() {\n    let { options } = this.props.streamStore;\n    return (\n      <div>\n        <Switch\n          checked={options.followSelection}\n          label=\"Follow Selection\"\n          onChange={(e) => this.props.streamStore.setOption(\"followSelection\", e.currentTarget.checked)}\n        />\n        <Switch\n          checked={options.locationInterpolation}\n          label=\"Interpolate Locations\"\n          onChange={(e) => this.props.streamStore.setOption(\"locationInterpolation\", e.currentTarget.checked)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { MenuItem, Classes } from '@blueprintjs/core';\n\nimport { observer } from 'mobx-react';\n\nimport Entity from '../store/entity';\n\nconst smallClasses = `${Classes.TEXT_SMALL} ${Classes.TEXT_MUTED}`;\n\ninterface EntityListItemProps {\n  entity: Entity;\n  selected: boolean;\n\n  onSelect: (id: number) => void;\n}\n\n@observer\nexport default class EntityListItem extends Component<EntityListItemProps> {\n  onClick = () => {\n    this.props.onSelect(this.props.entity.id);\n  }\n\n  render() {\n    const { entity, selected } = this.props;\n\n    let child = (\n      <div>\n        <div>\n          <span>{entity.realName}</span>\n          {entity.hasTarget && entity.target &&\n            <span className={smallClasses}> {\">>\"} {entity.target.realName} </span>\n          }\n        </div>\n        <div>\n          {entity.hasTarget ? (\n            <span className={smallClasses}>({entity.hexID} {\">>\"} {entity.hexTargetID})</span>\n          ) : (\n              <span className={smallClasses}>({entity.hexID})</span>\n            )}\n          {entity.castingSummary && (\n            <span className={smallClasses}> | Casting: {entity.castingSummary}</span>\n          )}\n        </div>\n      </div>\n    );\n\n    return (\n      <MenuItem text={child} active={selected} onClick={this.onClick} />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { UL, Elevation, InputGroup, Classes, Colors, MenuDivider, H5 } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport PaddedCard from './PaddedCard';\nimport EntityListItem from './EntityListItem';\n\nimport { inject, observer } from 'mobx-react';\nimport { StreamStoreProps, streamStoreDefaultProps } from '../store/stream';\n\nconst List = styled(UL)`\n  list-style: none;\n  padding: 0;\n  max-height: 23vh;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${Colors.GRAY1};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${Colors.DARK_GRAY5};\n  }\n`;\n\nfunction partition<T>(array: T[], predicate: (elem: T) => boolean) {\n  return array.reduce<T[][]>(([pass, fail], elem) => {\n    return predicate(elem) ? [[...pass, elem], fail] : [pass, [...fail, elem]];\n  }, [[], []]);\n}\n\nexport default class EntityListContainer extends Component<{}, { filter: string}> {\n  constructor(props: any) {\n    super(props);\n    this.state = { filter: \"\" };\n  }\n\n  handleFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ filter: e.target.value });\n  }\n\n  render() {\n    return (\n      <PaddedCard elevation={Elevation.THREE}>\n        <H5>Entities</H5>\n        <EntityList filter={this.state.filter} />\n        <InputGroup\n          className={Classes.ROUND}\n          leftIcon=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.handleFilter}\n        />\n      </PaddedCard>\n    );\n  }\n}\n\ninterface EntityListProps extends StreamStoreProps {\n  filter: string;\n}\n\n@inject(\"streamStore\")\n@observer\nclass EntityList extends Component<EntityListProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  onSelect = (id: number) => {\n    this.props.streamStore.setSelectedEntityID(id);\n  }\n\n  render() {\n    const { entityList, selectedEntity }  = this.props.streamStore;\n    let filteredList = entityList.filter(e => e.realName.includes(this.props.filter));\n    let [npcs, players] = partition(filteredList, (e) => e.isNPC);\n    return (\n      <List>\n        <MenuDivider title=\"Players\" />\n        { players.map(e =>\n          <EntityListItem\n            key={e.id} entity={e}\n            selected={e === selectedEntity}\n            onSelect={this.onSelect}\n          />\n        )}\n        <MenuDivider title=\"NPCs\" />\n        { npcs.map(e =>\n          <EntityListItem\n            key={e.id} entity={e}\n            selected={e === selectedEntity}\n            onSelect={this.onSelect}\n          />\n        )}\n      </List>\n    );\n  }\n}","import React, { Component } from 'react';\n\nimport styled from 'styled-components';\nimport { Classes } from '@blueprintjs/core';\n\nconst ResourceRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ResourceText = styled.div`\n  flex: 1 0 auto;\n  margin-right: 5px;\n`;\n\nconst ResourceBar = styled.div`\n  margin: 5px 0px;\n  flex: 0 0 auto;\n  margin-left: 5px;\n  flex-basis: 120px;\n`;\n\ninterface ResourceValueProps {\n  current: number;\n  max: number;\n  color: string;\n}\n\nexport default class ResourceValue extends Component<ResourceValueProps> {\n  render() {\n    let { current, max, color } = this.props;\n    let ratioPct = (current/max) * 100;\n    if (isNaN(ratioPct)) {\n      ratioPct = 100;\n    }\n    return (\n      <ResourceRow>\n        <ResourceText style={{color: color}}>{current}/{max}</ResourceText>\n        <ResourceBar>\n          <div className={`${Classes.PROGRESS_BAR} ${Classes.PROGRESS_NO_ANIMATION}`}>\n            <div className={Classes.PROGRESS_METER} style={{\n              backgroundColor: color,\n              width: `${ratioPct}%`,\n            }}></div>\n          </div>\n        </ResourceBar>\n      </ResourceRow>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Colors } from '@blueprintjs/core';\n\nimport { observer } from 'mobx-react';\n\nimport ResourceValue from './ResourceValue';\nimport TwoColumnTable from './TwoColumnTable';\nimport Entity from '../store/entity';\n\nconst toDegrees = (radians: number) => {\n  return (radians / Math.PI) * 180;\n}\n\ninterface SummaryProps {\n  entity: Entity;\n}\n\n@observer\nexport default class Summary extends Component<SummaryProps> {\n  render() {\n    const { targetString, level, resources, location } = this.props.entity;\n    const infos = {\n      Target: targetString,\n      Level: level,\n      HP: (<ResourceValue current={resources.hp} max={resources.maxHP} color={Colors.FOREST3} />),\n      MP: (<ResourceValue current={resources.mp} max={resources.maxMP} color={Colors.ROSE3} />),\n      TP: (<ResourceValue current={resources.tp} max={1000} color={Colors.GOLD3} />),\n      X: location.x,\n      Y: location.y,\n      Z: location.z,\n      Rot: `${toDegrees(location.orientation).toFixed(3)}° CCW from North`,\n    }\n    return (\n      <TwoColumnTable infos={infos} />\n    );\n  }\n}\n","import * as React from 'react';\nimport { Classes, Tabs as BPTabs, HTMLSelect } from '@blueprintjs/core';\n\nexport default class Tabs extends BPTabs {\n  render() {\n    const { selectedTabId } = this.state;\n    const tabTitles = React.Children.map(this.props.children, this.renderTabTitle);\n\n    const tabPanels = this.getTabChildren()\n      .filter(tab => tab.props.id === selectedTabId)\n      .map(this.renderTabPanel);\n\n    return (\n      <div className={Classes.TABS}>\n        <span className={Classes.TEXT_LARGE} style={{ marginRight: \"5px\" }}>Display:</span>\n        <span role=\"tablist\">\n          <HTMLSelect onChange={this.onChangeTab} value={selectedTabId}>\n            {tabTitles}\n          </HTMLSelect>\n        </span>\n        {tabPanels}\n      </div>\n    );\n  }\n\n  onChangeTab = (e) => {\n    this.handleTabClick(e.currentTarget.value, e);\n  }\n\n  renderTabTitle = (child, i) => {\n    if (!child.props) return child;\n    let { id, title } = child.props;\n    return <option key={i} value={id}>{title}</option>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Tab } from '@blueprintjs/core';\nimport { observer } from 'mobx-react';\n\nimport TwoColumnTable from './TwoColumnTable';\nimport Tabs from './Tabs';\nimport Entity from '../store/entity';\n\ninterface AdditionalInfoProps {\n  entity: Entity;\n}\n\n@observer\nexport default class AdditionalInfo extends Component<AdditionalInfoProps> {\n  render() {\n    const { entity } = this.props;\n\n    const lastActionTab = (<TabWrapper infoGetter={() => entity.lastAction} />);\n    const castInfoTab = (<TabWrapper infoGetter={() => entity.castingDetails} />);\n    const statusEffectsTab = (<TabWrapper infoGetter={() => entity.statusList} />);\n    const bNPCInfoTab = (<TabWrapper infoGetter={() => entity.bNPCInfo} />);\n    const spawnInfoTab = (<TabWrapper infoGetter={() => entity.rawSpawnData} />);\n\n    return (\n      <Tabs>\n        <Tab id=\"la\" title=\"Last Action\" panel={lastActionTab} />\n        <Tab id=\"castinf\" title=\"Casting Info\" panel={castInfoTab} />\n        <Tab id=\"steff\" title=\"Status Effects\" panel={statusEffectsTab} />\n        <Tab id=\"bnpc\" title=\"BNPC Info\" panel={bNPCInfoTab} />\n        <Tab id=\"spinf\" title=\"Spawn Info\" panel={spawnInfoTab} />\n      </Tabs>\n    );\n  }\n}\n\ninterface TabWrapperProps {\n  infoGetter: () => undefined | null | { [key: string]: any } | Component\n}\n\n@observer\nclass TabWrapper extends Component<TabWrapperProps> {\n  render() {\n    const infos = this.props.infoGetter();\n    if (!infos) {\n      return (<div></div>);\n    }\n    return (<TwoColumnTable infos={infos} />);\n  }\n}\n","import React, { Component } from 'react';\nimport { H5, Elevation, NonIdealState } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport { inject, observer } from 'mobx-react';\n\nimport PaddedCard from './PaddedCard';\nimport Summary from './Summary';\nimport AdditionalInfo from './AdditionalInfo';\nimport { StreamStoreProps, streamStoreDefaultProps } from '../store/stream';\n\nconst Section = styled.div`\n  margin: 10px 0;\n`;\n\nconst NoEntityBox = styled.div`\n  height: 400px;\n`;\n\n@inject(\"streamStore\")\n@observer\nexport default class Details extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  render() {\n    const { selectedEntity } = this.props.streamStore;\n    if (!selectedEntity) {\n      return (\n        <PaddedCard elevation={Elevation.THREE}>\n          <NoEntityBox>\n            <NonIdealState\n              icon=\"person\"\n              title=\"No entity exists\"\n              description=\"The server has not yet been populated with a list of entities. Please wait a moment.\"\n            />\n          </NoEntityBox>\n        </PaddedCard>\n      );\n    }\n    return (\n      <PaddedCard elevation={Elevation.THREE}>\n        <H5>{ selectedEntity.realName } ({ selectedEntity.hexID })</H5>\n        <Section><Summary entity={selectedEntity} /></Section>\n        <Section><AdditionalInfo entity={selectedEntity} /></Section>\n      </PaddedCard>\n    );\n  }\n}","import * as React from 'react';\nimport { H3, Colors } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport StreamDetails from './StreamDetails';\nimport EntityList from './EntityList';\nimport Details from './Details';\n\nconst SidePanel = styled.div`\n  flex: 0 0 400px;\n  min-width: 0;\n  height: 100vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${Colors.GRAY1};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${Colors.DARK_GRAY5};\n  }\n`;\n\nconst Title = styled(H3)`\n  padding: 10px;\n  text-align: center;\n`;\n\nexport default class Sidebar extends React.Component {\n  render() {\n    return (\n      <SidePanel>\n        <Title>Inspector</Title>\n        <StreamDetails />\n        <EntityList />\n        <Details />\n      </SidePanel>\n    );\n  }\n}","import * as React from 'react';\nimport { Colors, Divider } from '@blueprintjs/core';\n\nimport styled from 'styled-components';\n\nimport './App.css';\n\nimport Map from './Map';\nimport Sidebar from './Sidebar';\n\nconst AppRoot = styled.div`\n  background-color: ${Colors.DARK_GRAY3};\n`;\n\nconst AppContent = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  min-height: 100vh;\n  height: 100vh;\n  margin: auto;\n`;\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <AppRoot className=\"bp3-dark\">\n        <AppContent>\n          <Map></Map>\n          <Divider/>\n          <Sidebar></Sidebar>\n        </AppContent>\n      </AppRoot>\n    );\n  }\n}","\nimport React, { Component } from 'react';\nimport { Colors, NonIdealState, Spinner } from '@blueprintjs/core';\n\nimport styled from 'styled-components';\n\nimport './App.css';\n\nconst AppRoot = styled.div`\n  background-color: ${Colors.DARK_GRAY3};\n  min-height: 100vh;\n  height: 100vh;\n  margin: auto;\n`;\n\ninterface LoadingAppProps {\n  error?: string;\n}\n\nexport default class LoadingApp extends Component<LoadingAppProps> {\n  render() {\n    if (this.props.error) {\n      return (\n        <AppRoot className=\"bp3-dark\">\n          <NonIdealState\n            icon=\"warning-sign\"\n            title={this.props.error}\n          />\n        </AppRoot>\n      )\n    }\n    return (\n      <AppRoot className=\"bp3-dark\">\n        <NonIdealState\n          icon={<Spinner intent=\"primary\" />}\n          title=\"Loading...\"\n        />\n      </AppRoot>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { inject, observer, Provider } from 'mobx-react';\n\nimport streamStore, { PluginParams, StreamStoreProps, streamStoreDefaultProps } from './store/stream';\n\nimport App from './components/App';\nimport LoadingApp from './components/LoadingApp';\n\nimport * as serviceWorker from './serviceWorker';\n\ndeclare global {\n  interface Window {\n    waitForInit?: boolean;\n    initPlugin?: (params: PluginParams) => void;\n  }\n}\n\nconst getPluginParams = async (): Promise<PluginParams> => {\n  if (!window.waitForInit) {\n    return {\n      apiURL: 'http://localhost:8080/query',\n    };\n  } else {\n    return new Promise((resolve) => {\n      window.initPlugin = (params) => {\n        resolve(params);\n      };\n    });\n  }\n};\n\n@inject('streamStore')\n@observer\nclass Main extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  componentDidMount() {\n    getPluginParams().then((params) => {\n      this.props.streamStore.initialize(params);\n    });\n  }\n\n  render() {\n    const { loading, error } = this.props.streamStore;\n\n    if (loading) return <LoadingApp error={error} />;\n    return (<App />);\n  }\n}\n\nconst MainWithState = () => (\n  <Provider {...{ streamStore }}>\n    <Main />\n  </Provider>\n);\n\nReactDOM.render(<MainWithState />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}