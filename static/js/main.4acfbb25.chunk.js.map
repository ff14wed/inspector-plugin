{"version":3,"sources":["api/gql.ts","api/gqlClient.ts","store/entity.ts","store/stream.ts","components/MapBackground.tsx","components/MapEntity.tsx","components/MapTelegraph.tsx","components/MapView.tsx","components/Map.tsx","components/PaddedCard.tsx","components/TwoColumnTable.tsx","components/StreamDetails.tsx","components/EntityListItem.tsx","components/EntityList.tsx","components/ResourceValue.tsx","components/Summary.tsx","components/Tabs.jsx","components/AdditionalInfo.tsx","components/Details.tsx","components/Sidebar.tsx","components/App.tsx","components/LoadingApp.tsx","serviceWorker.js","index.tsx"],"names":["gql","_temp","Object","classCallCheck","this","classJobFragment","_templateObject","resourcesFragment","_templateObject2","locationFragment","_templateObject3","actionFragment","_templateObject4","statusFragment","_templateObject5","castingInfoFragment","_templateObject6","placeFragment","_templateObject7","enmityFragment","_templateObject8","entityFragment","_templateObject9","streamFragment","_templateObject10","streamSubscription","_templateObject11","entitySubscription","_templateObject12","versionQuery","_templateObject13","streamQuery","_templateObject14","listStreamsQuery","_templateObject15","hookMutation","_templateObject16","errHandlerLink","onError","_ref","graphQLErrors","networkError","map","_ref2","message","locations","path","console","log","concat","executeOperation","httpLink","operation","Promise","resolve","reject","makePromise","execute","then","result","data","errors","catch","error","GQLClient","apiURL","apiToken","_this","wsLink","getAPIVersion","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","query","sent","abrupt","apiVersion","stop","listStreams","_callee2","_context2","streams","getStream","_ref5","_callee3","streamID","variables","_context3","stream","_x","apply","arguments","subscribeToStreamEvents","handleStreamEvent","subscribe","subscriptionData","streamEvent","_streamEvent$type","type","__typename","eventData","objectWithoutProperties","subscribeToEntityEvents","handleEntityEvent","entityEvent","entityID","_entityEvent$type","httpOpts","headers","Authorization","wsConnectionParams","authorization","undefined","ApolloLink","from","HttpLink","objectSpread2","uri","WebSocketLink","replace","options","reconnect","connectionParams","toHex","id","toString","slice","Interpolation","p0","p1","startTime","t0","t1","duration","lastUpdated","t","lerpFactor","x","y","z","orientation","Entity","ent","target","index","name","bNPCInfo","ownerID","isNPC","isEnemy","isPet","rawSpawnData","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","statuses","observable","interpBufffer","_descriptor10","targetID","level","lastAction","castingInfo","assign","classJob","resources","location","interpLocation","JSON","parse","rawSpawnJSONData","forEach","s","idx","set","typename","action","status","delete","locationInterpolation","length","push","performance","now","time","interpolation","shift","pt","_this$interpLocation","xi","yi","zi","_this$location","dx","dy","dz","Math","sqrt","hasTarget","realName","hexTargetID","_this$castingInfo","actionName","actionID","info","targetString","fromEntries","toJS","size","computed","streamStoreDefaultProps","streamStore","store_stream","gqlClient","pluginParams","semver","satisfies","includePrerelease","getActiveStreamID","serverID","instanceNum","characterID","place","entities","_iterator","_step","n","done","value","window","requestAnimationFrame","animationFrame","targetEnt","get","castingTargetEnt","loading","_this2","selectedMapIndex","_this3","setEntities","removeEntity","addEntity","entity","currentCharacter","_this4","clear","selectedEntityID","optionName","toggle","hexID","has","ents","sort","b","maps","key","SizeFactor","OffsetX","OffsetY","PlaceName","PlaceNameSub","TerritoryType","mapID","territoryID","Map","followSelection","_this5","MapBackground","mapProps","url","scaleFactor","texture","PIXI","_super","call","anchor","height","width","position","destroy","children","coneCanvas","canvas","document","createElement","ctx","getContext","beginPath","moveTo","arc","PI","lineTo","gradient","createLinearGradient","addColorStop","fillStyle","fill","selectIndicatorCanvas","lineWidth","strokeStyle","stroke","entityCircleCanvas","lineCap","globalAlpha","createCone","cone","createSelectorIndicator","marker","MapEntity","telegraphUpdated","targetObserverDispose","locationObserverDispose","interpLocationObserverDispose","castingObserverDispose","hiddenObserverDispose","baseEntity","selector","locationUpdated","_this$baseEntity$loca","rotation","interpLocationUpdated","_this$baseEntity$inte","targetUpdated","color","Colors","RED3","VIOLET3","FOREST3","COBALT3","tint","parseInt","substring","hiddenUpdated","visible","isHidden","select","addChild","unselect","removeChild","radius","interactive","interactiveChildren","cursor","observe","remapCast","xAxisModifier","effectRange","castType","knownFans","12898","12899","12900","12901","12904","12905","13108","20037","20038","22663","22664","22665","22701","22702","Telegraph","castingEntity","renderer","rotationOffset","telegraphTexture","telegraphType","possibleConstructorReturn","_remapCast","omen","additionalRange","graphics","beginFill","lineStyle","drawRect","angle","match","exec","Number","extractAngle","radAngle","closePath","drawCircle","beginHole","endHole","baseRenderTex","scaleMode","LINEAR","render","COBALT5","VERMILION3","crossContainer","subSprite1","subSprite2","subSprite3","getPrototypeOf","prototype","baseTexture","MapView","inject","observer","_canvas","app","viewport","entityContainer","telegraphsContainer","mapContainer","entitySprites","telegraphSprites","mapSprite","entityObserverDispose","mapObserverDispose","selectedEntityObserverDispose","optionsObserverDispose","coordText","fontFamily","fontSize","align","hoverName","resize","parent","view","parentNode","clientWidth","clientHeight","screen","setOverlay","posx","posy","prefix","text","handleEntityChange","change","newValue","sprite","updateTelegraph","props","on","e","currentTarget","setSelectedEntityID","removeTelegraph","dispose","telegraph","MapTelegraph","createCompositeTelegraph","updateMap","mapInfo","worldHeight","worldWidth","clampZoom","maxWidth","maxHeight","centerX","centerY","moveCenter","leftClamp","rightClamp","topClamp","bottomClamp","clamp","left","top","right","bottom","updateEntitySelection","oldSelection","newSelection","oldID","newID","oldSprite","curSprite","plugins","remove","follow","updateOptions","selectedEntity","antialias","Viewport","interaction","drag","pinch","wheel","decelerate","zoomPercent","stage","addEventListener","currentMap","oldValue","pos","getLocalPosition","react_default","ref","c","Component","defaultProps","MapContainer","styled","div","Map_templateObject","react","MapView_MapView","React","Card","PaddedCard_templateObject","DARK_GRAY2","dayjs","extend","LocalizedFormat","GridBox","TwoColumnTable_templateObject","NameCell","className","Classes","TEXT_MUTED","TEXT_SMALL","TwoColumnTable","entries","infos","slicedToArray","isValidElement","format","TwoColumnTable_NameCell","NotInitializedBox","StreamDetails_templateObject","StreamDetails","_this$props$streamSto2","hexCharacterID","PaddedCard","elevation","Elevation","THREE","esm","icon","title","description","ServerID","InstanceNum","CharacterID","CurrentMap","TwoColumnTable_TwoColumnTable","panel","StreamDetails_MapSelectorPanel","StreamDetails_OptionsPanel","MapSelectorPanel","onChange","setSelectedMapIndex","_this$props$streamSto","m","i","OptionsPanel","checked","label","setOption","smallClasses","EntityListItem","onClick","onSelect","_this$props","selected","child","castingSummary","active","List","UL","EntityList_templateObject","GRAY1","DARK_GRAY5","EntityListContainer","handleFilter","setState","filter","state","EntityList_EntityList","ROUND","leftIcon","placeholder","EntityList","predicate","entityList","filteredList","includes","_partition","reduce","elem","pass","fail","toConsumableArray","_partition2","npcs","players","EntityListItem_EntityListItem","ResourceRow","ResourceValue_templateObject","ResourceText","ResourceValue_templateObject2","ResourceBar","ResourceValue_templateObject3","ResourceValue","current","max","ratioPct","isNaN","style","PROGRESS_BAR","PROGRESS_NO_ANIMATION","PROGRESS_METER","backgroundColor","Summary","radians","_this$props$entity","Target","Level","HP","ResourceValue_ResourceValue","hp","maxHP","MP","mp","maxMP","ROSE3","TP","tp","GOLD3","X","Y","Z","Rot","toFixed","Tabs","onChangeTab","handleTabClick","renderTabTitle","_child$props","selectedTabId","tabTitles","tabPanels","getTabChildren","tab","renderTabPanel","TABS","TEXT_LARGE","marginRight","role","BPTabs","AdditionalInfo","lastActionTab","AdditionalInfo_TabWrapper","infoGetter","castInfoTab","castingDetails","statusEffectsTab","statusList","bNPCInfoTab","spawnInfoTab","Tabs_Tabs","TabWrapper","Section","Details_templateObject","NoEntityBox","Details_templateObject2","Details","onHideEntity","Summary_Summary","AdditionalInfo_AdditionalInfo","SidePanel","Sidebar_templateObject","Title","H3","Sidebar_templateObject2","Sidebar","StreamDetails_StreamDetails","EntityList_EntityListContainer","Details_Details","AppRoot","App_templateObject","DARK_GRAY3","AppContent","App_templateObject2","App","Map_Map","Sidebar_Sidebar","LoadingApp_templateObject","LoadingApp","LoadingApp_AppRoot","intent","Boolean","hostname","getPluginParams","waitForInit","initPlugin","params","Main","initialize","LoadingApp_LoadingApp","App_App","MainWithState","mobxreact_esm","src_Main","ReactDOM","src_MainWithState","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4acfbb25.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport default new class {\n  classJobFragment = gql`\n    fragment classJob on ClassJob {\n      id\n      name\n      abbreviation\n    }\n  `;\n\n  resourcesFragment = gql`\n    fragment resources on Resources {\n      hp\n      mp\n      tp\n      maxHP\n      maxMP\n      lastTick\n    }\n  `;\n\n  locationFragment = gql`\n    fragment location on Location {\n      x\n      y\n      z\n      orientation\n      lastUpdated\n    }\n  `;\n\n  actionFragment = gql`\n    fragment action on Action {\n      id\n      name\n      targetID\n      useTime\n    }\n  `;\n\n  statusFragment = gql`\n    fragment status on Status {\n      id\n      param\n      name\n      description\n      startedTime\n      duration\n      actorID\n      lastTick\n    }\n  `;\n\n  castingInfoFragment = gql`\n    fragment castingInfo on CastingInfo {\n      actionID\n      actionName\n      startTime\n      castTime\n      targetID\n      location {\n        ...location\n      }\n\n      castType\n      effectRange\n      xAxisModifier\n      omen\n    }\n  `;\n\n  placeFragment = gql`\n    fragment place on Place {\n      mapID\n      territoryID\n      maps {\n        key\n        id\n        SizeFactor\n        OffsetX\n        OffsetY\n        PlaceName\n        PlaceNameSub\n        TerritoryType\n      }\n    }\n  `;\n\n  enmityFragment = gql`\n    fragment enmity on Enmity {\n      targetHateRanking {\n        actorID\n        hate\n      }\n      nearbyEnemyHate {\n        enemyID\n        hatePercent\n      }\n    }\n  `;\n\n  entityFragment = gql`\n    fragment entity on Entity {\n      id\n      index\n      name\n      targetID\n      ownerID\n      level\n      classJob {\n        ...classJob\n      }\n      isNPC\n      isEnemy\n      isPet\n      bNPCInfo {\n        nameID\n        baseID\n        modelID\n        name\n        size\n        error\n      }\n      resources {\n        ...resources\n      }\n      location {\n        ...location\n      }\n      lastAction {\n        ...action\n      }\n      statuses {\n        ...status\n      }\n      lockonMarker\n      castingInfo {\n        ...castingInfo\n      }\n      rawSpawnJSONData\n    }\n    ${this.classJobFragment}\n    ${this.resourcesFragment}\n    ${this.locationFragment}\n    ${this.actionFragment}\n    ${this.statusFragment}\n    ${this.castingInfoFragment}\n  `;\n\n  streamFragment = gql`\n    fragment stream on Stream {\n      id\n      serverID\n      instanceNum\n      characterID\n\n      place {\n        ...place\n      }\n      enmity {\n        ...enmity\n      }\n\n      entities {\n        ...entity\n      }\n    }\n    ${this.placeFragment}\n    ${this.enmityFragment}\n    ${this.entityFragment}\n  `;\n\n  streamSubscription = gql`\n    subscription Streams {\n      streamEvent {\n        streamID\n        type {\n          __typename\n          ... on UpdateIDs {\n            serverID\n            instanceNum\n            characterID\n          }\n          ... on UpdateMap {\n            place {\n              ...place\n            }\n          }\n        }\n      }\n    }\n    ${this.placeFragment}\n  `;\n\n  entitySubscription = gql`\n    subscription Entities {\n      entityEvent {\n        streamID\n        entityID\n        type {\n          __typename\n          ... on AddEntity {\n            entity {\n              ...entity\n            }\n          }\n          ... on RemoveEntity {\n            id\n          }\n          ... on SetEntities {\n            entities {\n              ...entity\n            }\n          }\n          ... on UpdateTarget {\n            targetID\n          }\n          ... on UpdateClass {\n            classJob {\n              ...classJob\n            }\n          }\n          ... on UpdateLastAction {\n            action {\n              ...action\n            }\n          }\n          ... on UpdateCastingInfo {\n            castingInfo {\n              ...castingInfo\n            }\n          }\n          ... on UpsertStatus {\n            index\n            status {\n              ...status\n            }\n          }\n          ... on RemoveStatus {\n            index\n          }\n          ... on UpdateLocation {\n            location {\n              ...location\n            }\n          }\n          ... on UpdateResources {\n            resources {\n              ...resources\n            }\n          }\n          ... on UpdateLockonMarker {\n            lockonMarker\n          }\n        }\n      }\n    }\n    ${this.entityFragment}\n    ${this.actionFragment}\n    ${this.castingInfoFragment}\n    ${this.statusFragment}\n    ${this.locationFragment}\n    ${this.resourcesFragment}\n    ${this.classJobFragment}\n  `;\n\n  versionQuery = gql`\n    query Version {\n      apiVersion\n    }\n  `;\n\n  streamQuery = gql`\n    query GetStream($streamID: Int!) {\n      stream(streamID: $streamID) {\n        ...stream\n      }\n    }\n    ${this.streamFragment}\n  `;\n\n  listStreamsQuery = gql`\n    query AllStreams {\n      streams {\n        id\n      }\n    }\n  `;\n\n  hookMutation = gql`\n    mutation SendHookData($req: StreamRequest!) {\n      sendStreamRequest(request: $req)\n    }\n  `;\n}()\n","import gql from './gql';\n\nimport { ApolloLink, execute, makePromise, GraphQLRequest } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { onError } from \"apollo-link-error\";\n\nconst errHandlerLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors)\n    graphQLErrors.map(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nconst executeOperation = (httpLink: ApolloLink, operation: GraphQLRequest) => {\n  // Funnel errors into a single promise rejection\n  return new Promise<{ [key: string]: any }>((resolve, reject) => {\n    makePromise(execute(httpLink, operation))\n      .then((result) => {\n        if (result.data) {\n          resolve(result.data);\n        } else {\n          reject(result.errors);\n        }\n      })\n      .catch((error) => reject(error));\n  })\n};\n\nexport default class GQLClient {\n  private httpLink: ApolloLink;\n  private wsLink: ApolloLink;\n\n  constructor(apiURL: string, apiToken?: string) {\n    let httpOpts = (apiToken) ? {\n      headers: {\n        Authorization: apiToken,\n      }\n    } : {};\n    let wsConnectionParams = (apiToken) ? () => ({\n      authorization: apiToken,\n    }) : undefined;\n\n    this.httpLink = ApolloLink.from([\n      errHandlerLink,\n      new HttpLink({ uri: apiURL, ...httpOpts }),\n    ]);\n    this.wsLink = ApolloLink.from([\n      errHandlerLink,\n      new WebSocketLink({\n        uri: apiURL.replace('http://', 'ws://'),\n        options: {\n          reconnect: true,\n          connectionParams: wsConnectionParams,\n        },\n      }),\n    ]);\n  }\n\n  public getAPIVersion = async (): Promise<string> => {\n    const data = await executeOperation(\n      this.httpLink, { query: gql.versionQuery },\n    );\n    return data.apiVersion;\n  }\n\n  public listStreams = async () => {\n    const data = await executeOperation(\n      this.httpLink, { query: gql.listStreamsQuery },\n    );\n    return data.streams;\n  }\n\n  public getStream = async (streamID: number) => {\n    const variables = { streamID };\n    const data = await executeOperation(\n      this.httpLink, { query: gql.streamQuery, variables },\n    )\n    return data.stream;\n  }\n\n  public subscribeToStreamEvents = (\n    streamID: number, handleStreamEvent: (type: string, data: any) => void\n  ) =>\n    execute(this.wsLink, { query: gql.streamSubscription })\n      .subscribe({\n        next: (subscriptionData) => {\n          if (!subscriptionData.data) { return; }\n          let streamEvent = subscriptionData.data.streamEvent;\n          if (streamEvent.streamID !== streamID) { return; }\n          let { __typename, ...eventData } = streamEvent.type;\n          handleStreamEvent(__typename, eventData);\n        },\n      });\n\n  public subscribeToEntityEvents = (\n    streamID: number, handleEntityEvent: (entityID: number, type: string, data: any) => void\n  ) =>\n    execute(this.wsLink, { query: gql.entitySubscription })\n      .subscribe({\n        next: (subscriptionData) => {\n          if (!subscriptionData.data) { return; }\n          let entityEvent = subscriptionData.data.entityEvent;\n          if (entityEvent.streamID !== streamID) { return; }\n\n          let { entityID } = entityEvent;\n          let { __typename, ...eventData } = entityEvent.type;\n          handleEntityEvent(entityID, __typename, eventData);\n        },\n      });\n}\n","import { observable, action, computed } from 'mobx';\nimport { InspectorOptions } from './stream';\n\nfunction toHex(id: number): string {\n  return `0x${('00000000' + id.toString(16)).slice(-8)}`\n}\n\nclass Interpolation {\n  public p0: Location;\n  public t0: number;\n  public p1: Location;\n  public t1: number;\n\n  private duration: number;\n\n  constructor(p0: Location, p1: Location, startTime: number) {\n    this.p0 = p0;\n    this.p1 = p1;\n    this.t0 = startTime;\n    this.duration = p1.lastUpdated - p0.lastUpdated;\n    this.t1 = this.t0 + this.duration;\n  }\n\n  pt(t: number): Location {\n    if (t <= this.t0) {\n      return this.p0;\n    } else if (t >= this.t1) {\n      return this.p1;\n    }\n    const lerpFactor = (t - this.t0) / (this.duration);\n    const xt = this.p0.x + (this.p1.x - this.p0.x) * lerpFactor;\n    const yt = this.p0.y + (this.p1.y - this.p0.y) * lerpFactor;\n    const zt = this.p0.z + (this.p1.z - this.p0.z) * lerpFactor;\n    return { x: xt, y: yt, z: zt, orientation: 0, lastUpdated: 0 };\n  }\n}\n\nexport interface BNPCInfo {\n  nameID: number;\n  baseID: number;\n  modelID: number;\n  name: string;\n  size: number;\n  error: string;\n}\n\nexport interface ClassJob {\n  id: number;\n  name: string;\n  abbreviation: string;\n}\nexport interface Location {\n  x: number;\n  y: number;\n  z: number;\n  orientation: number;\n  lastUpdated: number;\n}\n\nexport interface Resources {\n  hp: number;\n  mp: number;\n  tp: number;\n  maxHP: number;\n  maxMP: number;\n  lastTick: number;\n}\n\nexport interface Status {\n  id: number;\n  param: number;\n  name: string;\n  description: string;\n  startedTime: number;\n  duration: number;\n  actorID: number;\n  lastTick: number;\n}\n\nexport interface Action {\n  id: number;\n  name: string;\n  targetID: number;\n  useTime: number;\n}\n\nexport interface CastingInfo {\n  actionID: number;\n  actionName: string;\n  startTime: number;\n  castTime: number;\n  targetID: number;\n  location: Location;\n\n  castType: number;\n  effectRange: number;\n  xAxisModifier: number;\n  omen: string;\n\n  target?: Entity;\n}\n\nexport interface EntitySpec {\n  id: number;\n  index: number;\n  name: string;\n  targetID: number;\n  ownerID: number;\n  level: number;\n  classJob: ClassJob;\n  isNPC: boolean;\n  isEnemy: boolean;\n  isPet: boolean;\n  bNPCInfo?: BNPCInfo;\n  resources: Resources;\n  location: Location;\n  lastAction?: Action;\n  statuses: Status[];\n  lockonMarker: number;\n  castingInfo?: CastingInfo;\n  rawSpawnJSONData: string;\n}\n\nexport default class Entity {\n  id = 0;\n  index = -1;\n  name = \"\";\n  bNPCInfo?: BNPCInfo;\n  ownerID = 0;\n  isNPC = false;\n  isEnemy = false;\n  isPet = false;\n  rawSpawnData = {};\n\n  @observable targetID = 0;\n  @observable target?: Entity;\n  @observable level = -1;\n  @observable classJob: ClassJob;\n  @observable resources: Resources;\n  @observable location: Location;\n  @observable lastAction?: Action;\n  @observable castingInfo?: CastingInfo;\n  @observable isHidden: boolean = false;\n\n\n  statuses = observable.map<number, Status>();\n\n  interpBufffer: Interpolation[] = [];\n  @observable interpLocation: Location;\n\n  private options: InspectorOptions;\n\n  constructor(ent: EntitySpec, target: Entity | undefined, options: InspectorOptions) {\n    let {\n      id, index, name, bNPCInfo, ownerID, isNPC, isEnemy, isPet,\n      targetID, level, lastAction, castingInfo,\n    } = ent;\n    Object.assign(this, {\n      id, index, name, bNPCInfo, ownerID, isNPC, isEnemy, isPet,\n      targetID, level, lastAction, castingInfo,\n    });\n\n    this.classJob = ent.classJob;\n    this.resources = ent.resources;\n    this.location = ent.location;\n\n    this.target = target;\n    this.interpLocation = ent.location;\n    this.rawSpawnData = JSON.parse(ent.rawSpawnJSONData);\n    ent.statuses.forEach((s, idx) => {\n      if (s) { this.statuses.set(idx, s); }\n    });\n    this.options = options;\n  }\n\n  @action handleEntityEvent(typename: string, eventData: any) {\n    switch (typename) {\n      case \"UpdateTarget\":\n        this.targetID = eventData.targetID;\n        this.target = eventData.target;\n        break;\n      case \"UpdateClass\":\n        this.classJob = eventData.classJob;\n        break;\n      case \"UpdateLastAction\":\n        this.lastAction = eventData.action;\n        break;\n      case \"UpdateCastingInfo\":\n        this.castingInfo = eventData.castingInfo;\n        break;\n      case \"UpsertStatus\":\n        this.statuses.set(eventData.index, eventData.status);\n        break;\n      case \"RemoveStatus\":\n        this.statuses.delete(eventData.index);\n        break;\n      case \"UpdateLocation\":\n        let p0 = this.location;\n        this.location = eventData.location;\n        if (this.options.locationInterpolation) {\n          if (this.interpBufffer.length === 0) {\n            p0.lastUpdated = eventData.location.lastUpdated - 350;\n          }\n          this.interpBufffer.push(new Interpolation(p0, eventData.location, performance.now()));\n        }\n        break;\n      case \"UpdateResources\":\n        this.resources = eventData.resources;\n        break;\n    }\n  }\n\n  @action animationFrame(time: number) {\n    if (!this.options.locationInterpolation) {\n      return;\n    }\n    let interpolation: Interpolation | undefined;\n    while (this.interpBufffer.length > 0) {\n      if (time < this.interpBufffer[0].t0) {\n        return;\n      } else if (time > this.interpBufffer[0].t1) {\n        this.interpBufffer.shift();\n      } else {\n        interpolation = this.interpBufffer[0];\n        break;\n      }\n    }\n    if (interpolation) {\n      this.interpLocation = interpolation.pt(time);\n      return;\n    }\n    let { x: xi, y: yi, z: zi } = this.interpLocation;\n    let { x, y, z } = this.location;\n    let [dx, dy, dz] = [(xi - x), (yi - y), (zi - z)];\n    if (Math.sqrt(dx * dx + dy * dy + dz * dz) > 0.1) {\n      this.interpLocation = this.location;\n    }\n  }\n\n  @computed get realName() {\n    if (this.isNPC && this.bNPCInfo) {\n      return this.bNPCInfo.name || this.name;\n    }\n    return this.name;\n  }\n\n  @computed get hexID() {\n    return toHex(this.id);\n  }\n\n  @computed get hasTarget() {\n    return this.targetID !== 0xE0000000 && this.targetID !== 0;\n  }\n\n  @computed get targetString() {\n    if (!this.hasTarget) { return \"\" };\n    let name = (this.target && this.target.realName) || \"Unknown\";\n    return `${name} (${this.hexTargetID})`;\n  }\n\n  @computed get hexTargetID() {\n    return toHex(this.targetID);\n  }\n\n  @computed get castingSummary() {\n    if (!this.castingInfo) { return null; }\n    const { actionName, actionID } = this.castingInfo;\n    return `${actionName} (${actionID})`\n  }\n\n  @computed get castingDetails() {\n    if (!this.castingInfo) { return null; }\n\n    let info: { [key: string]: any } = Object.assign({}, this.castingInfo)\n    let name = (info.target && info.target.realName) || \"Unknown\";\n    info.targetString = `${name} (${toHex(info.targetID)})`;\n    delete info.targetID;\n    delete info.target;\n\n    return info;\n  }\n\n  @computed get statusList() {\n    return Object.fromEntries(this.statuses.toJS());\n  }\n\n  @computed get radius() {\n    if (this.bNPCInfo && this.bNPCInfo.size > 0) {\n      return this.bNPCInfo.size;\n    }\n    return 0.5;\n  }\n}\n","import { action, observable, computed } from 'mobx';\nimport GQLClient from '../api/gqlClient';\n\nimport Entity, { EntitySpec } from './entity';\n\nimport semver from 'semver';\n\nexport interface StreamStoreProps {\n  streamStore: Stream;\n}\nexport const streamStoreDefaultProps = { streamStore: (null as unknown) as Stream };\n\nexport interface MapInfo {\n  key: number;\n  id: string;\n  SizeFactor: number;\n  OffsetX: number;\n  OffsetY: number;\n  PlaceName: string;\n  PlaceNameSub: string;\n  TerritoryType: string;\n}\n\nexport interface Place {\n  mapID: number;\n  territoryID: number;\n  maps: MapInfo[];\n}\n\nexport interface InspectorOptions {\n  followSelection: boolean;\n  locationInterpolation: boolean;\n}\n\nexport interface PluginParams {\n  apiURL: string;\n  apiToken?: string;\n  streamID?: number;\n}\n\nclass Stream {\n  @observable loading = true;\n  @observable error?: string;\n\n  gqlClient?: GQLClient;\n  streamID = 0;\n  apiURL = '';\n\n  @observable serverID = 0;\n  @observable instanceNum = 0;\n  @observable characterID = 0;\n\n  @observable place: Place = { mapID: 0, territoryID: 0, maps: [] };\n  @observable entities = new Map<number, Entity>();\n\n  @observable selectedEntityID = 0;\n  @observable selectedMapIndex = 0;\n\n  @observable options: InspectorOptions = {\n    followSelection: true,\n    locationInterpolation: true,\n  };\n\n  @action async initialize(pluginParams: PluginParams) {\n    this.gqlClient = new GQLClient(pluginParams.apiURL, pluginParams.apiToken);\n\n    const apiVersion = await this.gqlClient.getAPIVersion();\n\n    if (!semver.satisfies(apiVersion, '>=0.2.0-beta', { includePrerelease: true })) {\n      this.error = \"Your version of Aetherometer is no longer supported by \" +\n        \"this plugin. Please update to a newer version.\";\n      return;\n    }\n\n    const streamID = this.streamID = await this.getActiveStreamID(pluginParams);\n    this.apiURL = pluginParams.apiURL;\n    this.subscribeToStreamEvents();\n    this.subscribeToEntityEvents();\n\n    if (!streamID) {\n      this.error = \"Stream ID not found!\";\n      return;\n    }\n\n    const stream = await this.gqlClient.getStream(streamID);\n    const { serverID, instanceNum, characterID, place, entities } = stream;\n    this.serverID = serverID;\n    this.instanceNum = instanceNum;\n    this.characterID = characterID;\n    this.place = place;\n    for (let ent of entities) {\n      this.entities.set(ent.id, new Entity(ent, undefined, this.options));\n    }\n    window.requestAnimationFrame(this.animationFrame);\n\n    this.entities.forEach(ent => {\n      let targetEnt = this.entities.get(ent.targetID);\n      ent.target = targetEnt;\n      if (ent.castingInfo) {\n        let castingTargetEnt = this.entities.get(ent.castingInfo.targetID);\n        ent.castingInfo.target = castingTargetEnt;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  async getActiveStreamID(pluginParams: PluginParams) {\n    if (pluginParams.streamID) {\n      return pluginParams.streamID;\n    } else {\n      const streams = await this.gqlClient!.listStreams();\n      if (streams.length > 0) {\n        return streams[0].id;\n      }\n    }\n    return 0;\n  }\n\n  @action subscribeToStreamEvents() {\n    return this.gqlClient!.subscribeToStreamEvents(\n      this.streamID,\n      action((typename: string, eventData: any) => {\n        if (this.loading) { return; }\n        switch (typename) {\n          case \"UpdateIDs\":\n            this.serverID = eventData.serverID;\n            this.instanceNum = eventData.instanceNum;\n            this.characterID = eventData.characterID;\n            break;\n          case \"UpdateMap\":\n            this.place = eventData.place;\n            this.selectedMapIndex = 0;\n            break;\n        }\n      }),\n    );\n  }\n\n  @action subscribeToEntityEvents() {\n    return this.gqlClient!.subscribeToEntityEvents(\n      this.streamID,\n      action((entityID: number, typename: string, eventData: any) => {\n        if (this.loading) { return; }\n\n        if (typename === \"AddEntity\") {\n          this.addEntity(eventData.entity);\n          return;\n        } else if (typename === \"RemoveEntity\") {\n          this.removeEntity(eventData.id);\n          return;\n        } else if (typename === \"SetEntities\") {\n          this.setEntities(eventData.entities);\n          return;\n        }\n        let ent = this.entities.get(entityID);\n        if (typename === \"UpdateTarget\") {\n          let targetEnt = this.entities.get(eventData.targetID);\n          if (targetEnt) {\n            eventData.target = targetEnt;\n          }\n        }\n        if (typename === \"UpdateCastingInfo\") {\n          if (eventData.castingInfo) {\n            let targetEnt = this.entities.get(eventData.castingInfo.targetID);\n            if (targetEnt) {\n              eventData.castingInfo.target = targetEnt;\n            }\n          }\n        }\n        if (ent) {\n          ent.handleEntityEvent(typename, eventData);\n        }\n      }),\n    );\n  }\n\n  @action addEntity(ent: EntitySpec) {\n    let targetEnt = this.entities.get(ent.targetID);\n    let currentCharacter = new Entity(ent, targetEnt, this.options);\n    this.entities.set(ent.id, currentCharacter);\n  }\n\n  @action removeEntity(id: number) {\n    this.entities.delete(id);\n  }\n\n  @action setEntities(entities: EntitySpec[]) {\n    this.entities.clear();\n    entities.forEach((ent) => {\n      this.addEntity(ent);\n    });\n  }\n\n  @action animationFrame = (time: number) => {\n    if (this.options.locationInterpolation) {\n      this.entities.forEach((ent) => ent.animationFrame(time));\n    }\n    window.requestAnimationFrame(this.animationFrame)\n  }\n\n  @action setSelectedEntityID(id: number) {\n    this.selectedEntityID = id;\n  }\n\n  @action setSelectedMapIndex(idx: number) {\n    this.selectedMapIndex = idx;\n  }\n\n  @action setOption(optionName: 'followSelection' | 'locationInterpolation', toggle: boolean) {\n    this.options[optionName] = toggle;\n  }\n\n  @computed get hexCharacterID() {\n    if (this.currentCharacter) {\n      return this.currentCharacter.hexID;\n    }\n    return '0x00000000';\n  }\n\n  @computed get currentCharacter() {\n    return this.entities.get(this.characterID);\n  }\n\n  @computed get selectedEntity() {\n    if (this.entities.has(this.selectedEntityID)) {\n      return this.entities.get(this.selectedEntityID);\n    } else {\n      return this.currentCharacter;\n    }\n  }\n\n  @computed get entityList() {\n    let ents: Entity[] = [];\n    this.entities.forEach((ent) => ents.push(ent));\n    ents.sort((a, b) => a.index - b.index);\n    return ents;\n  }\n\n\n  @computed get currentMap(): MapInfo {\n    if (this.place && this.place.maps.length > 0) {\n      return this.place.maps[this.selectedMapIndex];\n    }\n\n    return {\n      key: 1,\n      id: \"default/00\",\n      SizeFactor: 100,\n      OffsetX: 0,\n      OffsetY: 0,\n      PlaceName: \"Eorzea\",\n      PlaceNameSub: \"\",\n      TerritoryType: \"\"\n    };\n  }\n}\n\nexport default new Stream();\n","import * as PIXI from 'pixi.js';\n\ninterface MapBackgroundProps {\n  key: number;\n  SizeFactor: number;\n  OffsetX: number;\n  OffsetY: number;\n}\n\nexport default class MapBackground extends PIXI.Sprite {\n  constructor(mapProps: MapBackgroundProps, apiURL: string) {\n    let { key, SizeFactor, OffsetX, OffsetY } = mapProps;\n\n    const url = `${apiURL.replace('query', 'map')}/${key}`;\n    const scaleFactor = SizeFactor / 100;\n    const texture = PIXI.Texture.from(url);\n    super(texture)\n\n    const size = 2048/scaleFactor;\n    this.anchor.x = 0.5;\n    this.anchor.y = 0.5;\n    this.height = size;\n    this.width = size;\n    this.position.x = -OffsetX;\n    this.position.y = -OffsetY;\n  }\n\n  dispose() {\n    this.destroy({children: true});\n  }\n}","import * as PIXI from 'pixi.js';\n\nimport { Colors } from '@blueprintjs/core';\n\nimport { observe } from 'mobx';\n\nimport Entity from '../store/entity';\nimport { InspectorOptions } from '../store/stream';\n\nfunction getColor(entity: Entity) {\n  if (entity.isEnemy && entity.hasTarget) {\n    return Colors.RED3;\n  } else if (entity.isEnemy) {\n    return Colors.VIOLET3;\n  } else if (entity.isNPC) {\n    return Colors.FOREST3;\n  }\n  return Colors.COBALT3;\n}\n\nconst coneCanvas = (() => {\n  var canvas = document.createElement('canvas')\n  canvas.width = 512;\n  canvas.height = 512;\n  var ctx = canvas.getContext('2d')!;\n\n  ctx.beginPath();\n  ctx.moveTo(0, 256);\n  ctx.arc(0, 256, 256, -Math.PI / 6, Math.PI / 6);\n  ctx.lineTo(0, 256);\n\n  var gradient = ctx.createLinearGradient(0, 0, 230, 0);\n  gradient.addColorStop(0.0, 'rgba(255, 255, 255, 0.6)');\n  gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.4)');\n  gradient.addColorStop(1.0, 'rgba(255, 255, 255, 0)');\n\n  ctx.fillStyle = gradient;\n  ctx.fill();\n  return canvas;\n})();\n\nconst selectIndicatorCanvas = (() => {\n  var canvas = document.createElement('canvas')\n  canvas.width = 512;\n  canvas.height = 512;\n  var ctx = canvas.getContext('2d')!;\n  ctx.arc(256, 256, 200, 0, 2 * Math.PI);\n  ctx.lineWidth = 50;\n  ctx.strokeStyle = \"#FF0000\";\n  ctx.stroke();\n  return canvas;\n})();\n\nconst entityCircleCanvas = (() => {\n  var canvas = document.createElement('canvas')\n  canvas.width = 1024;\n  canvas.height = 1024;\n\n  var ctx = canvas.getContext('2d')!;\n\n  ctx.fillStyle = '#FFFFFF';\n  ctx.strokeStyle = '#FFFFFF';\n  ctx.lineCap = 'round';\n\n  ctx.globalAlpha = 0.5;\n  ctx.beginPath();\n  ctx.arc(512, 512, 512, 0, 2 * Math.PI);\n  ctx.fill();\n\n  ctx.globalAlpha = 1.0;\n  ctx.lineWidth = 32;\n\n  ctx.beginPath();\n  ctx.arc(512, 512, 512 - (ctx.lineWidth / 2), 0.25 * Math.PI, 0.75 * Math.PI);\n  ctx.stroke();\n\n  ctx.beginPath();\n  ctx.arc(512, 512, 512 - (ctx.lineWidth / 2), 1.25 * Math.PI, 1.75 * Math.PI);\n  ctx.stroke();\n\n  ctx.lineWidth = 64;\n  ctx.beginPath();\n  ctx.arc(512, 512, 512 - (ctx.lineWidth / 2), 1.75 * Math.PI, 0.25 * Math.PI);\n  ctx.stroke();\n\n  ctx.lineWidth = 128;\n  ctx.beginPath();\n  ctx.arc(512, 512, 512 - (ctx.lineWidth / 2), 1.9 * Math.PI, 0.1 * Math.PI);\n  ctx.stroke();\n\n  return canvas;\n})();\n\nconst createCone = () => {\n  let cone = new PIXI.Sprite(new PIXI.Texture(new PIXI.BaseTexture(coneCanvas)));\n  cone.height = 100 * 512;\n  cone.width = 100 * 512;\n  cone.anchor.x = 0;\n  cone.anchor.y = 0.5;\n  return cone;\n};\n\nconst createSelectorIndicator = () => {\n  let marker = new PIXI.Sprite(new PIXI.Texture(new PIXI.BaseTexture(selectIndicatorCanvas)));\n  marker.height = 1.7 * 1024;\n  marker.width = 1.7 * 1024;\n  marker.anchor.x = 0.5;\n  marker.anchor.y = 0.5;\n  return marker;\n};\n\nexport default class MapEntity extends PIXI.Sprite {\n  private targetObserverDispose?: () => void;\n  private locationObserverDispose?: () => void;\n  private interpLocationObserverDispose?: () => void;\n  private castingObserverDispose?: () => void;\n  private hiddenObserverDispose?: () => void;\n\n  private baseEntity: Entity;\n  private options: InspectorOptions;\n\n  private selector?: PIXI.Sprite;\n\n  constructor(\n    entity: Entity,\n    telegraphUpdated: () => void,\n    options: InspectorOptions,\n  ) {\n    super(new PIXI.Texture(new PIXI.BaseTexture(entityCircleCanvas)));\n    this.baseEntity = entity;\n    this.options = options;\n\n    if (entity.index === 0) {\n      this.addChild(createCone());\n    }\n    const radius = this.baseEntity.radius;\n    this.anchor.x = 0.5;\n    this.anchor.y = 0.5;\n    this.height = radius * 2;\n    this.width = radius * 2;\n\n    this.interactive = true;\n    this.interactiveChildren = false;\n    this.cursor = 'pointer';\n\n    this.targetUpdated();\n    this.locationUpdated();\n    this.interpLocationUpdated();\n    telegraphUpdated();\n\n    this.targetObserverDispose = observe(this.baseEntity, \"target\", this.targetUpdated);\n    this.locationObserverDispose = observe(this.baseEntity, \"location\", this.locationUpdated);\n    this.interpLocationObserverDispose = observe(this.baseEntity, \"interpLocation\", this.interpLocationUpdated);\n    this.castingObserverDispose = observe(this.baseEntity, \"castingInfo\", telegraphUpdated);\n    this.hiddenObserverDispose = observe(this.baseEntity, \"isHidden\", this.hiddenUpdated);\n  }\n\n  locationUpdated = () => {\n    let { x, z, orientation } = this.baseEntity.location;\n    if (!this.options.locationInterpolation) {\n      this.position.x = x;\n      this.position.y = z;\n    }\n    this.rotation = -Math.PI / 2 - orientation;\n  }\n\n  interpLocationUpdated = () => {\n    if (!this.options.locationInterpolation) {\n      return;\n    }\n    let { x, z } = this.baseEntity.interpLocation;\n    this.position.x = x;\n    this.position.y = z;\n  }\n\n  targetUpdated = () => {\n    const color = getColor(this.baseEntity);\n    this.tint = parseInt(color.substring(1), 16);\n  }\n\n  hiddenUpdated = () => {\n    this.visible = !this.baseEntity.isHidden;\n  }\n\n  select = () => {\n    this.selector = createSelectorIndicator();\n    this.addChild(this.selector);\n  }\n\n  unselect = () => {\n    if (this.selector) {\n      this.removeChild(this.selector);\n      this.selector = undefined;\n    }\n  }\n\n  dispose() {\n    this.destroy({ children: true });\n\n    if (this.targetObserverDispose) { this.targetObserverDispose(); }\n    if (this.locationObserverDispose) { this.locationObserverDispose(); }\n    if (this.interpLocationObserverDispose) { this.interpLocationObserverDispose(); }\n    if (this.castingObserverDispose) { this.castingObserverDispose(); }\n  }\n}\n","import * as PIXI from 'pixi.js';\n\nimport { Colors } from '@blueprintjs/core';\nimport Entity, { CastingInfo } from '../store/entity';\n\nfunction extractAngle(omen: string) {\n  let re = /gl_fan(\\d+)/;\n  let match = re.exec(omen);\n  if (!match || match.length < 2) {\n    return 0;\n  }\n  return Number(match[1]);\n}\n\nconst remapCast = (castingInfo: CastingInfo) => {\n  switch (castingInfo.actionID) {\n    case 6635:\n    case 6665:\n    case 6885:\n      return Object.assign({ ...castingInfo }, {\n        xAxisModifier: 16,\n        effectRange: 100,\n        castType: 11,\n      });\n    case 6637:\n      return Object.assign({ ...castingInfo }, {\n        castType: 10,\n      });\n    case 13061:\n    case 13062:\n    case 13063:\n    case 13103:\n    case 13104:\n    case 13105:\n    case 13059:\n    case 13060:\n    case 13106:\n    case 13107:\n      return Object.assign({ ...castingInfo }, {\n        castType: 4,\n      });\n    case 13108:\n      return Object.assign({ ...castingInfo }, {\n        castType: 3,\n      });\n    case 22097:\n    case 22131:\n    case 22181:\n      return Object.assign({ ...castingInfo }, {\n        xAxisModifier: 16,\n        effectRange: 50,\n        castType: 12,\n      });\n  }\n  return castingInfo;\n};\n\nconst knownFans: { [k: number]: number } = {\n  12898: 210,\n  12899: 210,\n  12900: 210,\n  12901: 210,\n  12904: 210,\n  12905: 210,\n  13108: 330,\n  20037: 150,\n  20038: 45,\n  22663: 210,\n  22664: 210,\n  22665: 210,\n  22701: 210,\n  22702: 210,\n};\n\ntype TelegraphType = \"\" | \"rectangle\" | \"cross\" | \"fan\" | \"circle\" | \"halo\";\n\nexport default class Telegraph extends PIXI.Sprite {\n  public telegraphTexture?: PIXI.RenderTexture;\n  public telegraphType?: TelegraphType;\n\n  constructor(castingEntity: Entity, renderer: PIXI.Renderer, rotationOffset: number) {\n    if (!castingEntity.castingInfo) {\n      super();\n      return;\n    }\n\n    let {\n      actionID, castType, effectRange, xAxisModifier, omen, target, location\n    } = remapCast(castingEntity.castingInfo);\n\n    let additionalRange = 0;\n    if (target) {\n      additionalRange = target.radius;\n    }\n\n    let graphics = new PIXI.Graphics();\n    graphics.beginFill(0xffffff, 0.2);\n    graphics.lineStyle(16, 0xffffff, 1, 0);\n\n    effectRange += additionalRange;\n\n    let telegraphType: TelegraphType = \"\";\n    switch (castType) {\n      case 4:\n      case 8:\n      case 12:\n        telegraphType = \"rectangle\";\n        graphics.drawRect(0, 0, 1024, 1024);\n        break;\n      case 3:\n      case 13:\n        let angle = extractAngle(omen)\n        if (actionID in knownFans) {\n          angle = knownFans[actionID];\n        }\n        if (angle === 0) {\n          break;\n        }\n        let radAngle = (angle / 180) * Math.PI;\n        telegraphType = \"fan\";\n        graphics.moveTo(512, 512);\n        graphics.arc(512, 512, 512, -radAngle / 2, radAngle / 2);\n        graphics.closePath();\n        break;\n      case 2:\n      case 5:\n      case 6:\n      case 7:\n        telegraphType = \"circle\";\n        graphics.drawCircle(512, 512, 512);\n        graphics.closePath();\n        break;\n      case 10:\n        telegraphType = \"halo\";\n        graphics.drawCircle(512, 512, 512);\n        graphics.closePath();\n\n        // Size is not accurate, but enough to get the point across\n        graphics.beginHole();\n        graphics.drawCircle(512, 512, 128);\n        graphics.closePath();\n        graphics.endHole();\n        break;\n      case 11:\n        telegraphType = \"cross\";\n        graphics.drawRect(0, 0, 1024, 1024);\n        break;\n    }\n\n    if (telegraphType === \"\") {\n      super();\n      return;\n    }\n\n    const baseRenderTex = new PIXI.BaseRenderTexture({\n      width: 1024,\n      height: 1024,\n      scaleMode: PIXI.SCALE_MODES.LINEAR,\n    });\n\n    const telegraphTexture = new PIXI.RenderTexture(baseRenderTex);\n    renderer.render(graphics, telegraphTexture, false);\n\n    super(telegraphTexture);\n    this.telegraphTexture = telegraphTexture;\n    this.telegraphType = telegraphType;\n\n    let color = Colors.COBALT5;\n    if (castingEntity.isEnemy) {\n      color = Colors.VERMILION3;\n    }\n    switch (telegraphType) {\n      case \"cross\":\n      case \"rectangle\":\n        this.anchor.x = 0.5;\n        this.anchor.y = 0;\n        this.width = xAxisModifier;\n        this.height = effectRange;\n        this.rotation = - location.orientation + Math.PI;\n        break;\n      case \"fan\":\n      case \"halo\":\n      case \"circle\":\n        this.anchor.x = 0.5;\n        this.anchor.y = 0.5;\n        this.width = effectRange * 2;\n        this.height = effectRange * 2;\n        this.rotation = - location.orientation - Math.PI / 2;\n    }\n\n    if (rotationOffset) {\n      this.rotation = this.rotation + rotationOffset;\n    }\n\n    this.position.x = location.x;\n    this.position.y = location.z;\n    this.tint = parseInt(color.substring(1), 16);\n  }\n\n  createCompositeTelegraph(castingEntity: Entity, renderer: PIXI.Renderer): PIXI.DisplayObject | undefined {\n    if (this.telegraphTexture) {\n      if (this.telegraphType === \"cross\") {\n        let crossContainer = new PIXI.Container();\n        let subSprite1 = new Telegraph(castingEntity, renderer, Math.PI / 2);\n        let subSprite2 = new Telegraph(castingEntity, renderer, -Math.PI / 2);\n        let subSprite3 = new Telegraph(castingEntity, renderer, Math.PI);\n        crossContainer.addChild(this);\n        crossContainer.addChild(subSprite1);\n        crossContainer.addChild(subSprite2);\n        crossContainer.addChild(subSprite3);\n        return crossContainer;\n      }\n      return this;\n    }\n  }\n\n  destroy() {\n    if (this.telegraphTexture) { this.telegraphTexture.destroy(true); }\n    super.destroy({ children: true, texture: true, baseTexture: true });\n  }\n}\n","import React, { Component } from 'react';\n\nimport * as PIXI from 'pixi.js';\nimport { Viewport } from 'pixi-viewport';\n\nimport { inject, observer } from 'mobx-react';\n\nimport MapBackground from './MapBackground';\nimport MapEntity from './MapEntity';\nimport MapTelegraph from './MapTelegraph';\nimport { observe, IMapDidChange, ObservableMap } from 'mobx';\nimport { StreamStoreProps, streamStoreDefaultProps, MapInfo } from '../store/stream';\nimport Entity from '../store/entity';\n\n// interface ViewportFixed {\n//   screenHeight: number;\n//   fixHeight()\n// }\n@inject('streamStore')\n@observer\nexport default class MapView extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  private _canvas?: HTMLCanvasElement;\n  private app?: PIXI.Application;\n  private viewport?: Viewport;\n  private entityContainer = new PIXI.Container();\n  private telegraphsContainer = new PIXI.Container();\n  private mapContainer = new PIXI.Container();\n\n  private entitySprites: { [key: number]: MapEntity } = {};\n  private telegraphSprites: { [key: number]: PIXI.DisplayObject } = {};\n  private mapSprite?: MapBackground;\n\n  private entityObserverDispose?: () => void;\n  private mapObserverDispose?: () => void;\n  private selectedEntityObserverDispose?: () => void;\n  private optionsObserverDispose?: () => void;\n\n  private coordText = new PIXI.Text('', { fontFamily: 'Arial', fontSize: 24, fill: 0x000000, align: 'center' });\n  private hoverName?: string;\n\n  componentDidMount() {\n    this.app = new PIXI.Application({\n      width: 100,\n      height: 100,\n      view: this._canvas,\n      antialias: true,\n    });\n\n    this.viewport = new Viewport({\n      interaction: this.app.renderer.plugins.interaction,\n    });\n\n    this.viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .decelerate();\n\n    this.viewport.zoomPercent(8);\n\n    this.app.stage.addChild(this.viewport);\n\n    this.viewport.addChild(this.mapContainer);\n    this.viewport.addChild(this.telegraphsContainer);\n    this.viewport.addChild(this.entityContainer);\n\n    window.addEventListener('resize', this.resize);\n    this.resize();\n\n    this.updateMap(this.props.streamStore.currentMap);\n\n    this.props.streamStore.entities.forEach((entity, key) => {\n      this.addEntity(key, entity);\n      this.updateTelegraph(key, entity);\n    });\n\n    this.entityObserverDispose = observe<number, Entity>(\n      this.props.streamStore.entities as ObservableMap<number, Entity>,\n      this.handleEntityChange,\n    );\n\n    this.mapObserverDispose = observe(\n      this.props.streamStore, \"currentMap\",\n      (change) => this.updateMap(change.newValue),\n    );\n\n    this.selectedEntityObserverDispose = observe(\n      this.props.streamStore, \"selectedEntity\",\n      (change) => this.updateEntitySelection(change.oldValue, change.newValue),\n    );\n    this.updateEntitySelection(undefined, this.props.streamStore.selectedEntity);\n\n    this.optionsObserverDispose = observe(\n      this.props.streamStore.options,\n      (change) => {\n        if (change.type === \"update\") { this.updateOptions(change.name, change.newValue); }\n      },\n    );\n\n    this.coordText.x = 0;\n    this.coordText.y = 0;\n    let moveHandler = (e: any) => {\n      let pos = e.data.getLocalPosition(this.mapContainer);\n      this.setOverlay(this.hoverName || '', pos.x, pos.y);\n    };\n    this.app.stage.interactive = true;\n    this.app.stage.on(\"pointermove\", moveHandler);\n\n    this.app.stage.addChild(this.coordText);\n  }\n\n  resize = () => {\n    if (!this.app || !this.viewport) { return; }\n    const parent = this.app.view.parentNode as HTMLElement;\n    this.app.renderer.resize(parent.clientWidth, parent.clientHeight - 4);\n    this.viewport.resize(this.app.screen.width, this.app.screen.height);\n  }\n\n  setOverlay = (name: string, posx: number, posy: number) => {\n    let prefix = '';\n    if (name) {\n      prefix = `${name} `\n    }\n    this.coordText.text = `${prefix}(${posx}, ${posy})`;\n  }\n\n  handleEntityChange = (change: IMapDidChange<number, Entity>) => {\n    if (change.type === \"add\" || change.type === \"update\") {\n      this.addEntity(change.name, change.newValue);\n    } else if (change.type === \"delete\") {\n      this.removeEntity(change.name);\n    }\n  }\n\n  addEntity = (key: number, entity: Entity) => {\n    if (!this.app) { return; }\n    if (key in this.entitySprites) {\n      this.removeEntity(key);\n    }\n    let sprite = this.entitySprites[key] = new MapEntity(\n      entity,\n      () => this.updateTelegraph(key, entity),\n      this.props.streamStore.options,\n    );\n    sprite.on(\"pointerover\", (e: any) => {\n      this.hoverName = e.currentTarget.baseEntity.realName;\n    });\n    sprite.on(\"pointerout\", (e: any) => {\n      if (this.hoverName === e.currentTarget.baseEntity.realName) {\n        this.hoverName = '';\n      }\n    });\n    sprite.on(\"click\", (e: any) => {\n      this.props.streamStore.setSelectedEntityID(e.currentTarget.baseEntity.id);\n    });\n    this.entityContainer.addChild(sprite);\n  }\n\n  removeEntity = (key: number) => {\n    this.removeTelegraph(key);\n    if (key in this.entitySprites) {\n      let sprite = this.entitySprites[key];\n      this.entityContainer.removeChild(sprite);\n      sprite.dispose();\n      delete this.entitySprites[key];\n    }\n  }\n\n  removeTelegraph = (key: number) => {\n    if (key in this.telegraphSprites) {\n      let telegraph = this.telegraphSprites[key];\n      this.telegraphsContainer.removeChild(telegraph);\n      telegraph.destroy();\n      delete this.telegraphSprites[key];\n    }\n  }\n\n  updateTelegraph = (key: number, entity: Entity) => {\n    if (!this.app) { return; }\n\n    this.removeTelegraph(key);\n\n    const telegraph = new MapTelegraph(entity, this.app.renderer, 0);\n    let sprite = telegraph.createCompositeTelegraph(entity, this.app.renderer);\n    if (sprite) {\n      this.telegraphSprites[key] = sprite;\n      this.telegraphsContainer.addChild(sprite);\n    }\n  }\n\n  updateMap = (mapInfo: MapInfo) => {\n    if (!this.viewport) { return; }\n\n    if (this.mapSprite) {\n      this.mapContainer.removeChild(this.mapSprite);\n      this.mapSprite.dispose();\n    }\n    this.mapSprite = undefined;\n\n    this.mapSprite = new MapBackground(mapInfo, this.props.streamStore.apiURL);\n\n    this.mapContainer.addChild(this.mapSprite);\n    let height = this.mapSprite.height;\n    let width = this.mapSprite.width;\n    this.viewport.worldHeight = height;\n    this.viewport.worldWidth = width;\n    this.viewport.clampZoom({\n      maxWidth: width,\n      maxHeight: height,\n    });\n\n    let centerX = this.mapSprite.position.x;\n    let centerY = this.mapSprite.position.y;\n    this.viewport.moveCenter(centerX, centerY);\n\n    let leftClamp = centerX - width / 2;\n    let rightClamp = centerX + width / 2;\n    let topClamp = centerY - height / 2;\n    let bottomClamp = centerY + height / 2;\n    this.viewport.clamp({\n      left: leftClamp,\n      top: topClamp,\n      right: rightClamp,\n      bottom: bottomClamp,\n    })\n  }\n\n  updateEntitySelection = (oldSelection?: Entity, newSelection?: Entity) => {\n    if (!this.viewport) { return; }\n    let oldID = (oldSelection && oldSelection.id) || 0;\n    let newID = (newSelection && newSelection.id) || 0;\n    let oldSprite = this.entitySprites[oldID];\n    let curSprite = this.entitySprites[newID];\n    this.viewport.plugins.remove('follow');\n    if (oldSprite) {\n      oldSprite.unselect();\n    }\n    if (curSprite) {\n      if (this.props.streamStore.options.followSelection) {\n        this.viewport.follow(curSprite);\n      }\n      curSprite.select();\n    }\n  }\n\n  updateOptions = (optionName: string | number | symbol, newValue: boolean) => {\n    if (!this.viewport) { return; }\n    if (optionName === \"followSelection\") {\n      if (newValue) {\n        let sprite = this.entitySprites[this.props.streamStore.selectedEntity!.id];\n        if (sprite) {\n          this.viewport.follow(sprite);\n        }\n      } else {\n        this.viewport.plugins.remove('follow');\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.entityObserverDispose) { this.entityObserverDispose(); }\n    if (this.mapObserverDispose) { this.mapObserverDispose(); }\n    if (this.selectedEntityObserverDispose) { this.selectedEntityObserverDispose(); }\n    if (this.optionsObserverDispose) { this.optionsObserverDispose(); }\n\n    if (this.app) { this.app.destroy(); }\n  }\n\n  render() {\n    return (\n      <canvas ref={(c) => { if (c) { this._canvas = c; } }} />\n    )\n  }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport MapView from './MapView';\n\nconst MapContainer = styled.div`\n  flex: 1 0 400px;\n  min-width: 0;\n  position: relative;\n`;\n\nexport default class Map extends React.Component {\n  render() {\n    return (\n      <MapContainer>\n        <MapView />\n      </MapContainer>\n    );\n  }\n}","import { Card, Colors } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nexport default styled(Card)`\n  padding: 20px;\n  margin: 20px;\n  && {\n    background-color: ${Colors.DARK_GRAY2};\n  }\n`;\n\n","import React, { Component } from 'react';\nimport { Classes } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport dayjs from 'dayjs';\n\nimport LocalizedFormat from 'dayjs/plugin/localizedFormat'\ndayjs.extend(LocalizedFormat)\n\nconst GridBox = styled.div`\n  display: grid;\n  grid-row-gap: 5px;\n  grid-column-gap: 10px;\n  grid-template-columns: max-content auto;\n  grid-auto-rows: minmax(18px, auto);\n`;\n\nconst NameCell = (props: { children: any }) =>\n  <div className={`${Classes.TEXT_MUTED} ${Classes.TEXT_SMALL}`}>{props.children}</div>\n\n\ninterface TwoColumnTableProps {\n  infos: { [key: string]: any } | Array<{ [key: string]: any }>;\n}\n\nexport default class TwoColumnTable extends Component<TwoColumnTableProps> {\n  render() {\n    let entries: JSX.Element[] = [];\n    Object.entries(this.props.infos).forEach(([key, value]) => {\n      let t = typeof value;\n      if (t !== \"number\" && t !== \"string\" && !React.isValidElement(value)) {\n        if (!value) {\n          value = (<div></div>);\n        } else {\n          value = (<TwoColumnTable infos={value} />);\n        }\n      }\n      if (key === \"lastUpdated\" ||\n          key === \"lastTick\" ||\n          key === \"startedTime\" ||\n          key === \"useTime\") {\n        value = dayjs(value).format(\"L HH:mm:ss.SSS\");\n      }\n\n      entries.push(<NameCell key={`${key}-name`}>{key}</NameCell>);\n      entries.push(<div key={`${key}-info`}>{value}</div>);\n    });\n\n    return (\n      <GridBox>\n        {entries}\n      </GridBox>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { H5, Elevation, NonIdealState, Tab, Tabs, HTMLSelect, Switch } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport { inject, observer } from 'mobx-react';\n\nimport PaddedCard from './PaddedCard';\nimport TwoColumnTable from './TwoColumnTable';\nimport { StreamStoreProps, streamStoreDefaultProps } from '../store/stream';\n\nconst NotInitializedBox = styled.div`\n  height: 200px;\n`;\n\n@inject(\"streamStore\")\n@observer\nexport default class StreamDetails extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  render() {\n    const { streamID, serverID, instanceNum, hexCharacterID, currentMap } = this.props.streamStore;\n    if (!serverID) {\n      return (\n        <PaddedCard elevation={Elevation.THREE}>\n          <NotInitializedBox>\n            <NonIdealState\n              icon=\"database\"\n              title=\"Not yet initialized.\"\n              description=\"The server has not yet been initialized. Please rezone to populate the data.\"\n            />\n          </NotInitializedBox>\n        </PaddedCard>\n      );\n    }\n    const infos = {\n      ServerID: serverID,\n      InstanceNum: instanceNum,\n      CharacterID: hexCharacterID,\n      CurrentMap: currentMap,\n    };\n\n\n    return (\n      <PaddedCard elevation={Elevation.THREE}>\n        <H5>Stream {streamID}</H5>\n        <TwoColumnTable infos={infos} />\n        <Tabs id=\"ViewControls\">\n          <Tab id=\"map\" title=\"Map\" panel={<MapSelectorPanel />} />\n          <Tab id=\"options\" title=\"Options\" panel={<OptionsPanel />} />\n        </Tabs>\n      </PaddedCard>\n    );\n  }\n}\n\n@inject(\"streamStore\")\n@observer\nclass MapSelectorPanel extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.props.streamStore.setSelectedMapIndex(Number(e.currentTarget.value));\n  }\n\n  render() {\n    const { place, selectedMapIndex } = this.props.streamStore;\n\n    return (\n      <div>\n        <HTMLSelect onChange={this.onChange} value={selectedMapIndex}>\n          {place.maps.map((m, i) => <option key={i} value={i}>{m.PlaceName}{m.PlaceNameSub && ` - ${m.PlaceNameSub}`}</option>)}\n        </HTMLSelect>\n      </div>\n    );\n  }\n}\n\n@inject(\"streamStore\")\n@observer\nclass OptionsPanel extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  render() {\n    let { options } = this.props.streamStore;\n    return (\n      <div>\n        <Switch\n          checked={options.followSelection}\n          label=\"Follow Selection\"\n          onChange={(e) => this.props.streamStore.setOption(\"followSelection\", e.currentTarget.checked)}\n        />\n        <Switch\n          checked={options.locationInterpolation}\n          label=\"Interpolate Locations\"\n          onChange={(e) => this.props.streamStore.setOption(\"locationInterpolation\", e.currentTarget.checked)}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { MenuItem, Classes } from '@blueprintjs/core';\n\nimport { observer } from 'mobx-react';\n\nimport Entity from '../store/entity';\n\nconst smallClasses = `${Classes.TEXT_SMALL} ${Classes.TEXT_MUTED}`;\n\ninterface EntityListItemProps {\n  entity: Entity;\n  selected: boolean;\n\n  onSelect: (id: number) => void;\n}\n\n@observer\nexport default class EntityListItem extends Component<EntityListItemProps> {\n  onClick = () => {\n    this.props.onSelect(this.props.entity.id);\n  }\n\n  render() {\n    const { entity, selected } = this.props;\n\n    let child = (\n      <div>\n        <div>\n          <span>{entity.realName}</span>\n          {entity.hasTarget && entity.target &&\n            <span className={smallClasses}> {\">>\"} {entity.target.realName} </span>\n          }\n        </div>\n        <div>\n          {entity.hasTarget ? (\n            <span className={smallClasses}>({entity.hexID} {\">>\"} {entity.hexTargetID})</span>\n          ) : (\n              <span className={smallClasses}>({entity.hexID})</span>\n            )}\n          {entity.castingSummary && (\n            <span className={smallClasses}> | Casting: {entity.castingSummary}</span>\n          )}\n          {entity.isHidden && (\n            <span className={smallClasses}> | HIDDEN</span>\n          )}\n        </div>\n      </div>\n    );\n\n    return (\n      <MenuItem text={child} active={selected} onClick={this.onClick} />\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { UL, Elevation, InputGroup, Classes, Colors, MenuDivider, H5 } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport PaddedCard from './PaddedCard';\nimport EntityListItem from './EntityListItem';\n\nimport { inject, observer } from 'mobx-react';\nimport { StreamStoreProps, streamStoreDefaultProps } from '../store/stream';\n\nconst List = styled(UL)`\n  list-style: none;\n  padding: 0;\n  max-height: 23vh;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${Colors.GRAY1};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${Colors.DARK_GRAY5};\n  }\n`;\n\nfunction partition<T>(array: T[], predicate: (elem: T) => boolean) {\n  return array.reduce<T[][]>(([pass, fail], elem) => {\n    return predicate(elem) ? [[...pass, elem], fail] : [pass, [...fail, elem]];\n  }, [[], []]);\n}\n\nexport default class EntityListContainer extends Component<{}, { filter: string}> {\n  constructor(props: any) {\n    super(props);\n    this.state = { filter: \"\" };\n  }\n\n  handleFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ filter: e.target.value });\n  }\n\n  render() {\n    return (\n      <PaddedCard elevation={Elevation.THREE}>\n        <H5>Entities</H5>\n        <EntityList filter={this.state.filter} />\n        <InputGroup\n          className={Classes.ROUND}\n          leftIcon=\"search\"\n          placeholder=\"Search...\"\n          onChange={this.handleFilter}\n        />\n      </PaddedCard>\n    );\n  }\n}\n\ninterface EntityListProps extends StreamStoreProps {\n  filter: string;\n}\n\n@inject(\"streamStore\")\n@observer\nclass EntityList extends Component<EntityListProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  onSelect = (id: number) => {\n    this.props.streamStore.setSelectedEntityID(id);\n  }\n\n  render() {\n    const { entityList, selectedEntity }  = this.props.streamStore;\n    let filteredList = entityList.filter(e => e.realName.includes(this.props.filter));\n    let [npcs, players] = partition(filteredList, (e) => e.isNPC);\n    return (\n      <List>\n        <MenuDivider title=\"Players\" />\n        { players.map(e =>\n          <EntityListItem\n            key={e.id} entity={e}\n            selected={e === selectedEntity}\n            onSelect={this.onSelect}\n          />\n        )}\n        <MenuDivider title=\"NPCs\" />\n        { npcs.map(e =>\n          <EntityListItem\n            key={e.id} entity={e}\n            selected={e === selectedEntity}\n            onSelect={this.onSelect}\n          />\n        )}\n      </List>\n    );\n  }\n}","import React, { Component } from 'react';\n\nimport styled from 'styled-components';\nimport { Classes } from '@blueprintjs/core';\n\nconst ResourceRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ResourceText = styled.div`\n  flex: 1 0 auto;\n  margin-right: 5px;\n`;\n\nconst ResourceBar = styled.div`\n  margin: 5px 0px;\n  flex: 0 0 auto;\n  margin-left: 5px;\n  flex-basis: 120px;\n`;\n\ninterface ResourceValueProps {\n  current: number;\n  max: number;\n  color: string;\n}\n\nexport default class ResourceValue extends Component<ResourceValueProps> {\n  render() {\n    let { current, max, color } = this.props;\n    let ratioPct = (current/max) * 100;\n    if (isNaN(ratioPct)) {\n      ratioPct = 100;\n    }\n    return (\n      <ResourceRow>\n        <ResourceText style={{color: color}}>{current}/{max}</ResourceText>\n        <ResourceBar>\n          <div className={`${Classes.PROGRESS_BAR} ${Classes.PROGRESS_NO_ANIMATION}`}>\n            <div className={Classes.PROGRESS_METER} style={{\n              backgroundColor: color,\n              width: `${ratioPct}%`,\n            }}></div>\n          </div>\n        </ResourceBar>\n      </ResourceRow>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Colors } from '@blueprintjs/core';\n\nimport { observer } from 'mobx-react';\n\nimport ResourceValue from './ResourceValue';\nimport TwoColumnTable from './TwoColumnTable';\nimport Entity from '../store/entity';\n\nconst toDegrees = (radians: number) => {\n  return (radians / Math.PI) * 180;\n}\n\ninterface SummaryProps {\n  entity: Entity;\n}\n\n@observer\nexport default class Summary extends Component<SummaryProps> {\n  render() {\n    const { targetString, level, resources, location } = this.props.entity;\n    const infos = {\n      Target: targetString,\n      Level: level,\n      HP: (<ResourceValue current={resources.hp} max={resources.maxHP} color={Colors.FOREST3} />),\n      MP: (<ResourceValue current={resources.mp} max={resources.maxMP} color={Colors.ROSE3} />),\n      TP: (<ResourceValue current={resources.tp} max={1000} color={Colors.GOLD3} />),\n      X: location.x,\n      Y: location.y,\n      Z: location.z,\n      Rot: `${toDegrees(location.orientation).toFixed(3)}° CCW from North`,\n    }\n    return (\n      <TwoColumnTable infos={infos} />\n    );\n  }\n}\n","import * as React from 'react';\nimport { Classes, Tabs as BPTabs, HTMLSelect } from '@blueprintjs/core';\n\nexport default class Tabs extends BPTabs {\n  render() {\n    const { selectedTabId } = this.state;\n    const tabTitles = React.Children.map(this.props.children, this.renderTabTitle);\n\n    const tabPanels = this.getTabChildren()\n      .filter(tab => tab.props.id === selectedTabId)\n      .map(this.renderTabPanel);\n\n    return (\n      <div className={Classes.TABS}>\n        <span className={Classes.TEXT_LARGE} style={{ marginRight: \"5px\" }}>Display:</span>\n        <span role=\"tablist\">\n          <HTMLSelect onChange={this.onChangeTab} value={selectedTabId}>\n            {tabTitles}\n          </HTMLSelect>\n        </span>\n        {tabPanels}\n      </div>\n    );\n  }\n\n  onChangeTab = (e) => {\n    this.handleTabClick(e.currentTarget.value, e);\n  }\n\n  renderTabTitle = (child, i) => {\n    if (!child.props) return child;\n    let { id, title } = child.props;\n    return <option key={i} value={id}>{title}</option>;\n  }\n}\n","import React, { Component } from 'react';\nimport { Tab } from '@blueprintjs/core';\nimport { observer } from 'mobx-react';\n\nimport TwoColumnTable from './TwoColumnTable';\nimport Tabs from './Tabs';\nimport Entity from '../store/entity';\n\ninterface AdditionalInfoProps {\n  entity: Entity;\n}\n\n@observer\nexport default class AdditionalInfo extends Component<AdditionalInfoProps> {\n  render() {\n    const { entity } = this.props;\n\n    const lastActionTab = (<TabWrapper infoGetter={() => entity.lastAction} />);\n    const castInfoTab = (<TabWrapper infoGetter={() => entity.castingDetails} />);\n    const statusEffectsTab = (<TabWrapper infoGetter={() => entity.statusList} />);\n    const bNPCInfoTab = (<TabWrapper infoGetter={() => entity.bNPCInfo} />);\n    const spawnInfoTab = (<TabWrapper infoGetter={() => entity.rawSpawnData} />);\n\n    return (\n      <Tabs>\n        <Tab id=\"la\" title=\"Last Action\" panel={lastActionTab} />\n        <Tab id=\"castinf\" title=\"Casting Info\" panel={castInfoTab} />\n        <Tab id=\"steff\" title=\"Status Effects\" panel={statusEffectsTab} />\n        <Tab id=\"bnpc\" title=\"BNPC Info\" panel={bNPCInfoTab} />\n        <Tab id=\"spinf\" title=\"Spawn Info\" panel={spawnInfoTab} />\n      </Tabs>\n    );\n  }\n}\n\ninterface TabWrapperProps {\n  infoGetter: () => undefined | null | { [key: string]: any } | Component\n}\n\n@observer\nclass TabWrapper extends Component<TabWrapperProps> {\n  render() {\n    const infos = this.props.infoGetter();\n    if (!infos) {\n      return (<div></div>);\n    }\n    return (<TwoColumnTable infos={infos} />);\n  }\n}\n","import React, { Component } from 'react';\nimport { H5, Elevation, NonIdealState, Checkbox } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport { inject, observer } from 'mobx-react';\n\nimport PaddedCard from './PaddedCard';\nimport Summary from './Summary';\nimport AdditionalInfo from './AdditionalInfo';\nimport { StreamStoreProps, streamStoreDefaultProps } from '../store/stream';\n\nconst Section = styled.div`\n  margin: 10px 0;\n`;\n\nconst NoEntityBox = styled.div`\n  height: 400px;\n`;\n\n@inject(\"streamStore\")\n@observer\nexport default class Details extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  render() {\n    const { selectedEntity } = this.props.streamStore;\n    if (!selectedEntity) {\n      return (\n        <PaddedCard elevation={Elevation.THREE}>\n          <NoEntityBox>\n            <NonIdealState\n              icon=\"person\"\n              title=\"No entity exists\"\n              description=\"The server has not yet been populated with a list of entities. Please wait a moment.\"\n            />\n          </NoEntityBox>\n        </PaddedCard>\n      );\n    }\n    return (\n      <PaddedCard elevation={Elevation.THREE}>\n        <H5>{selectedEntity.realName} ({selectedEntity.hexID})</H5>\n        <Section><Summary entity={selectedEntity} /></Section>\n        <Section><AdditionalInfo entity={selectedEntity} /></Section>\n        <Section><Checkbox checked={selectedEntity.isHidden} label=\"Hide?\" onChange={this.onHideEntity} /> </Section>\n      </PaddedCard>\n    );\n  }\n\n  onHideEntity = (e: React.FormEvent<HTMLInputElement>) => {\n    this.props.streamStore.selectedEntity!.isHidden = e.currentTarget.checked;\n  }\n}\n","import * as React from 'react';\nimport { H3, Colors } from '@blueprintjs/core';\nimport styled from 'styled-components';\n\nimport StreamDetails from './StreamDetails';\nimport EntityList from './EntityList';\nimport Details from './Details';\n\nconst SidePanel = styled.div`\n  flex: 0 0 400px;\n  min-width: 0;\n  height: 100vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${Colors.GRAY1};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${Colors.DARK_GRAY5};\n  }\n`;\n\nconst Title = styled(H3)`\n  padding: 10px;\n  text-align: center;\n`;\n\nexport default class Sidebar extends React.Component {\n  render() {\n    return (\n      <SidePanel>\n        <Title>Inspector</Title>\n        <StreamDetails />\n        <EntityList />\n        <Details />\n      </SidePanel>\n    );\n  }\n}","import * as React from 'react';\nimport { Colors, Divider } from '@blueprintjs/core';\n\nimport styled from 'styled-components';\n\nimport './App.css';\n\nimport Map from './Map';\nimport Sidebar from './Sidebar';\n\nconst AppRoot = styled.div`\n  background-color: ${Colors.DARK_GRAY3};\n`;\n\nconst AppContent = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  min-height: 100vh;\n  height: 100vh;\n  margin: auto;\n`;\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <AppRoot className=\"bp3-dark\">\n        <AppContent>\n          <Map></Map>\n          <Divider/>\n          <Sidebar></Sidebar>\n        </AppContent>\n      </AppRoot>\n    );\n  }\n}","\nimport React, { Component } from 'react';\nimport { Colors, NonIdealState, Spinner } from '@blueprintjs/core';\n\nimport styled from 'styled-components';\n\nimport './App.css';\n\nconst AppRoot = styled.div`\n  background-color: ${Colors.DARK_GRAY3};\n  min-height: 100vh;\n  height: 100vh;\n  margin: auto;\n`;\n\ninterface LoadingAppProps {\n  error?: string;\n}\n\nexport default class LoadingApp extends Component<LoadingAppProps> {\n  render() {\n    if (this.props.error) {\n      return (\n        <AppRoot className=\"bp3-dark\">\n          <NonIdealState\n            icon=\"warning-sign\"\n            title={this.props.error}\n          />\n        </AppRoot>\n      )\n    }\n    return (\n      <AppRoot className=\"bp3-dark\">\n        <NonIdealState\n          icon={<Spinner intent=\"primary\" />}\n          title=\"Loading...\"\n        />\n      </AppRoot>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { inject, observer, Provider } from 'mobx-react';\n\nimport streamStore, { PluginParams, StreamStoreProps, streamStoreDefaultProps } from './store/stream';\n\nimport App from './components/App';\nimport LoadingApp from './components/LoadingApp';\n\nimport * as serviceWorker from './serviceWorker';\n\ndeclare global {\n  interface Window {\n    waitForInit?: boolean;\n    initPlugin?: (params: PluginParams) => void;\n  }\n}\n\nconst getPluginParams = async (): Promise<PluginParams> => {\n  if (!window.waitForInit) {\n    return {\n      apiURL: 'http://localhost:8080/query',\n    };\n  } else {\n    return new Promise((resolve) => {\n      window.initPlugin = (params) => {\n        resolve(params);\n      };\n    });\n  }\n};\n\n@inject('streamStore')\n@observer\nclass Main extends Component<StreamStoreProps> {\n  static defaultProps = streamStoreDefaultProps;\n\n  componentDidMount() {\n    getPluginParams().then((params) => {\n      this.props.streamStore.initialize(params);\n    });\n  }\n\n  render() {\n    const { loading, error } = this.props.streamStore;\n\n    if (loading) return <LoadingApp error={error} />;\n    return (<App />);\n  }\n}\n\nconst MainWithState = () => (\n  <Provider {...{ streamStore }}>\n    <Main />\n  </Provider>\n);\n\nReactDOM.render(<MainWithState />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}